C51 COMPILER V9.60.0.0   MAIN                                                              06/19/2022 19:19:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Include) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //-----------------------------------------------------------------
   2          //  名称:步进电机(28BYJ-48)程序
   3          //-----------------------------------------------------------------
   4          
   5          //---1~9档的转速------------------------------------------------
   6          //DEE4  定时时间  8.476ms ,   转速  1.73r/min
   7          //E1EC  定时时间  7.7ms ,     转速  1.90r/min
   8          //E5D4  定时时间  6.7ms,      转速  2.19r/min
   9          //E9BC  定时时间  5.7ms,      转速  2.57r/min
  10          //EDA4  定时时间  4.7ms,      转速  3.12r/min
  11          //F18C  定时时间  3.7ms,      转速  3.96r/min
  12          //F574  定时时间  2.7ms,      转速  5.43r/min
  13          //F95C  定时时间  1.7ms,      转速  8.62r/min
  14          //FC18  定时时间  1ms  ,      转速  14.65r/min
  15          //-----------------------------------------------------------------
  16          //转一圈需要节拍数：360/(5.625/64) = 4096 个节拍
  17          //转速r/min = (60*1000) / (4096 * 定时时间)
  18          //-----------------------------------------------------------------
  19          
  20          #include "Key.h"
  21          
  22          //0~9 的共阳数码管段码，最后一个是黑屏
  23          const uchar SEG_CODE[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xFF};
  24          
  25          //输出励磁序列的频率参数{TH1,TL1}
  26          const uchar Timer[9][2]={{0xDE,0xE4},{0xE1,0xEC},{0xE5,0xD4},{0xE9,0xBC},  //8.476 ~ 1ms
  27                            {0xEd,0xA4},{0xF1,0x8C},{0xF5,0x74},{0xF9,0x5C},{0xFC,0x18}};
  28          
  29          //步进电机正转的励磁序列
  30          const uchar FFW[] = {0x1F,0x3F,0x2F,0x6F,0x4F,0xCF,0x8F,0x9F}; //DCBAXXXX
  31          
  32          //步进电机反转的励磁序列
  33          const uchar REV[] = {0x9F,0x8F,0xCF,0x4F,0x6F,0x2F,0x3F,0x1F}; //DCBAXXXX
  34          
  35          //枚举变量--正反转标志
  36          typedef enum
  37            {FwdRun, RevRun} RunFlag;               
  38          RunFlag flag1 = FwdRun;
  39          
  40          uchar speed = 1;
  41          
  42          //函数声明
  43          void T0_Init();         //定时器0初始化函数声明
  44          void T1_Init();         //定时器1初始化函数声明
  45          void KeyService();      //按键服务函数声明
  46          void delay_ms(uint t);  //毫秒延时函数声明
  47            
  48          //-----------------------------------------------------------------
  49          // 主程序
  50          //-----------------------------------------------------------------
  51          void main()
  52          { 
  53   1        T0_Init();          //定时器0初始化
  54   1        T1_Init();          //定时器1初始化
C51 COMPILER V9.60.0.0   MAIN                                                              06/19/2022 19:19:46 PAGE 2   

  55   1        FWD_LED = 0;        //正转指示灯亮，默认初始化是正转
  56   1        
  57   1        delay_ms(500);      //延时500ms，待各个模块上电稳定
  58   1        EA = 1;             //开启中断
  59   1        while(1)
  60   1        { 
  61   2          KeyService();   //按键服务程序
  62   2        }
  63   1      } 
  64          
  65          //-----------------------------------------------------------------
  66          // Timer0 初始化，模式1，允许中断，1ms定时
  67          // Timer0 用于按键扫描
  68          //-----------------------------------------------------------------
  69          void T0_Init()
  70          {
  71   1        TMOD &= 0xF0;
  72   1        TMOD |= 0x01;                   //T0工作于模式1,16位定时器
  73   1        TH0 = (65536 - 1000) >> 8;      //1ms定时
  74   1        TL0 = (65536 - 1000) & 0xFF;
  75   1        ET0 = 1;                        //允许T0中断
  76   1        TR0 = 1;                        //启动T0
  77   1      }
  78          
  79          //-----------------------------------------------------------------
  80          // Timer1 初始化，模式1，允许中断
  81          // Timer1 用于改变步进电机转速
  82          //-----------------------------------------------------------------
  83          void T1_Init()
  84          {
  85   1        TMOD &= 0x0F;
  86   1        TMOD |= 0x10;             //定时器1工作于模式1,16位定时器
  87   1        TH1 = Timer[speed][0];
  88   1        TL1 = Timer[speed][1];    //定时器1，定时用于步进电机转速控制
  89   1        ET1 = 1;                  //允许T1中断
  90   1        PT1 = 1;                  //定时器1优先级高
  91   1        TR1 = 0;                  //关闭定时器1
  92   1      }
  93          
  94          //-----------------------------------------------------------------
  95          // Timer0 中断服务程序
  96          //-----------------------------------------------------------------
  97          void InterruptTime0() interrupt 1
  98          {
  99   1        TH0 = (65536 - 1000) >> 8;    //1ms
 100   1        TL0 = (65536 - 1000) & 0xFF;
 101   1        KeyScan();                    //按键扫描
 102   1      }
 103          
 104          
 105          //-----------------------------------------------------------------
 106          // Timer1 中断服务程序
 107          //-----------------------------------------------------------------
 108          void InterruptTime1() interrupt 3
 109          {
 110   1         static volatile unsigned char step1 = 0;             
 111   1         static volatile unsigned char step2 = 0;
 112   1        if(!speed) speed = 1;
 113   1      //  if(speed == 9) speed = 9;
 114   1        TH1 = Timer[speed - 1][0];      //根据不同的转速档位，给定时器1赋定时器值
 115   1        TL1 = Timer[speed - 1][1];      
 116   1        
C51 COMPILER V9.60.0.0   MAIN                                                              06/19/2022 19:19:46 PAGE 3   

 117   1        //按照定时器1的频率循环发送正转励磁序列的脉冲给步进电机，使其不停地转动
 118   1        if(flag1 == FwdRun)//正转
 119   1        {
 120   2          MotorDriver = FFW[step1++];   
 121   2          step1 %= 8; 
 122   2        }
 123   1        
 124   1         //按照定时器1的频率循环发送反转励磁序列的脉冲给步进电机，使其不停地转动
 125   1        else if(flag1 == RevRun)       
 126   1        {
 127   2          MotorDriver = REV[step2++];
 128   2          step2  %=8; 
 129   2        }
 130   1      }
 131          
 132          //-----------------------------------------------------------------
 133          // 按键服务程序
 134          //-----------------------------------------------------------------
 135          void KeyService()
 136          {
 137   1        switch (KeyCode)
 138   1        {
 139   2          case 1: flag1 = FwdRun;                   //正转
 140   2                  SpeedShow = SEG_CODE[speed];
 141   2                  FWD_LED = 0;  REV_LED = 1;        //正转指示灯亮
 142   2                  if(TR1 == 0) TR1 = 1;
 143   2                  KeyCode = 0;
 144   2                  break;              
 145   2          case 2: flag1 = RevRun;                   //反转
 146   2                  SpeedShow = SEG_CODE[speed];
 147   2                  FWD_LED = 1;  REV_LED = 0;        //反转指示灯亮
 148   2                  if(TR1 == 0) TR1 = 1;
 149   2                  KeyCode = 0;
 150   2                  break;
 151   2          case 3: speed++;                    //速度加
 152   2                  if(speed >= 9) speed = 9;                   
 153   2                  SpeedShow = SEG_CODE[speed];
 154   2                  if(TR1 == 0) TR1 = 1;
 155   2                  KeyCode = 0;
 156   2                  break;
 157   2          case 4: speed--;                        //速度减
 158   2                  if(speed <= 1 ) speed = 1;            
 159   2                  SpeedShow = SEG_CODE[speed];  
 160   2                  if(TR1 == 0) TR1 = 1; 
 161   2                  KeyCode = 0;
 162   2                  break;
 163   2          case 5: TR1 = 0;                          //停止
 164   2                  SpeedShow = 0xFF;
 165   2                  MotorDriver = 0x00;
 166   2                  KeyCode = 0;
 167   2                  break;  
 168   2          default: ;
 169   2        }
 170   1      }
 171          
 172          //-----------------------------------------------------------------
 173          //函数名称：  void delay_ms(uint t)
 174          //函数功能:   延时ms程序(粗略)
 175          //调用子函数: 无
 176          //输入参数:   t
 177          //返回值:     无
 178          //-----------------------------------------------------------------
C51 COMPILER V9.60.0.0   MAIN                                                              06/19/2022 19:19:46 PAGE 4   

 179          void delay_ms(uint t)
 180          {
 181   1        uchar i; while(t--) for(i = 0; i < 125; i++);
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    399    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     49    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
