C51 COMPILER V9.60.0.0   MAIN                                                              07/13/2022 22:30:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /* 使用了宏晶科技的资料及程序   */
   2          
   3          
   4          /*************  本程序功能说明  **************
   5          【Proteus仿真】STC单片机IO方式控制74HC595驱动8位数码管显示简易数码管时钟
   6          
   7          显示效果为: 数码时钟.
   8          
   9          ******************************************/
  10          
  11          #define   MAIN_Fosc   22118400L //定义主时钟
  12          
  13          #include  "STC15Fxxxx.H"
  14          
  15          
  16          #define Timer0_Reload (65536UL -(MAIN_Fosc / 1000))   //Timer 0 中断频率, 1000次/秒
  17          
  18          #define DIS_DOT   0x20
  19          #define DIS_BLACK 0x10
  20          #define DIS_    0x11
  21          
  22          u8 code t_display[]={           //标准字库
  23          //   0    1    2    3    4    5    6    7    8    9   -
  24            0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x40
  25          };  
  26          
  27          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};    //位码
  28          
  29          
  30          sbit  P_HC595_SER   = P4^0; //pin 14  SER   data input
  31          sbit  P_HC595_RCLK  = P5^4; //pin 12  RCLk  store (latch) clock
  32          sbit  P_HC595_SRCLK = P4^3; //pin 11  SRCLK Shift data clock
  33          
  34          u8  LED8[8];    //显示缓冲
  35          u8  display_index;  //显示位索引
  36          bit B_1ms;      //1ms标志
  37          
  38          u8  cnt10ms;
  39          
  40          u8  hour,minute,second; //RTC变量
  41          u16 msecond;
  42          
  43          void  DisplayRTC(void);
  44          void  RTC(void);
  45          
  46          /**********************************************/
  47          void main(void)
  48          {
  49   1        u8  i;
  50   1      
  51   1        P0M1 = 0; P0M0 = 0; //设置为准双向口
  52   1        P1M1 = 0; P1M0 = 0; //设置为准双向口
  53   1        P2M1 = 0; P2M0 = 0; //设置为准双向口
  54   1        P3M1 = 0; P3M0 = 0; //设置为准双向口
  55   1        P4M1 = 0; P4M0 = 0; //设置为准双向口
C51 COMPILER V9.60.0.0   MAIN                                                              07/13/2022 22:30:28 PAGE 2   

  56   1        P5M1 = 0; P5M0 = 0; //设置为准双向口
  57   1        P6M1 = 0; P6M0 = 0; //设置为准双向口
  58   1        P7M1 = 0; P7M0 = 0; //设置为准双向口
  59   1        
  60   1        display_index = 0;
  61   1        
  62   1        AUXR = 0x80;  //Timer0 set as 1T, 16 bits timer auto-reload, 
  63   1        TH0 = (u8)(Timer0_Reload / 256);
  64   1        TL0 = (u8)(Timer0_Reload % 256);
  65   1        ET0 = 1;  //Timer0 interrupt enable
  66   1        TR0 = 1;  //Tiner0 run
  67   1        EA = 1;   //打开总中断
  68   1        
  69   1        for(i=0; i<8; i++)  LED8[i] = 0x10; //上电消隐
  70   1      
  71   1        hour   = 22;  //初始化时间值
  72   1        minute = 10;
  73   1        second = 0;
  74   1        DisplayRTC();
  75   1        cnt10ms = 0;
  76   1      
  77   1        while(1)
  78   1        {
  79   2          if(B_1ms) //1ms到
  80   2          {
  81   3            B_1ms = 0;
  82   3            if(++msecond >= 100)  //1秒到,实际是1000，Proteus仿真速度太慢，加速10倍
  83   3            {
  84   4              msecond = 0;
  85   4              RTC();
  86   4              DisplayRTC();
  87   4            }
  88   3      //      if(msecond == 50) DisplayRTC(); //小时后的小数点做秒闪，实际是500，Proteus仿真速度太慢，加速10倍
  89   3      
  90   3          }
  91   2        }
  92   1      } 
  93          
  94          /********************** 显示时钟函数 ************************/
  95          void  DisplayRTC(void)
  96          {
  97   1        if(hour >= 10)  LED8[0] = hour / 10;
  98   1        else      LED8[0] = DIS_BLACK;
  99   1        LED8[1] = hour % 10;
 100   1        LED8[2] = 10;//-
 101   1        LED8[3] = minute / 10;
 102   1        LED8[4] = minute % 10;
 103   1          LED8[5] =10;//-
 104   1        if(second >= 10)  LED8[6] = second / 10;
 105   1        else      LED8[6] =  0;
 106   1        LED8[7] = second % 10;
 107   1        //if(msecond >= 500)    LED8[7] |= DIS_DOT; //小数点做秒闪
 108   1      }
 109          
 110          /********************** RTC演示函数 ************************/
 111          void  RTC(void)
 112          {
 113   1          if(++second >= 60)
 114   1        {
 115   2          second = 0;
 116   2          if(++minute >= 60)
 117   2          {
C51 COMPILER V9.60.0.0   MAIN                                                              07/13/2022 22:30:28 PAGE 3   

 118   3            minute = 0;
 119   3            if(++hour >= 24)  hour = 0;
 120   3          }
 121   2        }
 122   1      }
 123          
 124          
 125          /**************** 向HC595发送一个字节函数 ******************/
 126          void Send_595(u8 dat)
 127          {   
 128   1        u8  i;
 129   1        for(i=0; i<8; i++)
 130   1        {
 131   2          dat <<= 1;
 132   2          P_HC595_SER   = CY;
 133   2          P_HC595_SRCLK = 1;
 134   2          P_HC595_SRCLK = 0;
 135   2        }
 136   1      }
 137          
 138          /********************** 显示扫描函数 ************************/
 139          void DisplayScan(void)
 140          { 
 141   1        Send_595(~T_COM[display_index]);        //输出位码
 142   1        Send_595(t_display[LED8[display_index]]); //输出段码
 143   1      
 144   1        P_HC595_RCLK = 1;
 145   1        P_HC595_RCLK = 0;             //锁存输出数据
 146   1        if(++display_index >= 8)  display_index = 0;  //8位结束回0
 147   1      }
 148          
 149          
 150          /********************** Timer0 1ms中断函数 ************************/
 151          void timer0 (void) interrupt TIMER0_VECTOR
 152          {
 153   1        TR0 =0;
 154   1        TH0 = (u8)(Timer0_Reload / 256);//Proteus仿真，需要填写重装载值。
 155   1        TL0 = (u8)(Timer0_Reload % 256);
 156   1        DisplayScan();  //1ms扫描显示一位
 157   1        B_1ms = 1;    //1ms标志
 158   1        TR0 =1;
 159   1      }
 160          
 161          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    376    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
