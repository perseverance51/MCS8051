C51 COMPILER V9.60.0.0   MPU                                                               02/03/2022 15:41:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MPU
OBJECT MODULE PLACED IN .\list\mpu.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE mpu.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\mpu.lst) 
                    -TABS(2) OBJECT(.\list\mpu.obj)

line level    source

   1          #include "mpu.h"
   2          
   3           int  dis_data;           //变量
   4           uchar dis[6];              //显示数字(-511至512)的字符数组
   5           int  dis_data;           //变量
   6          //**************************************
   7          //延时5微秒(STC90C52RC@12M)
   8          //不同的工作环境,需要调整此函数
   9          //当改用1T的MCU时,请调整此延时函数
  10          //**************************************
  11          void Delay5us()
  12          {
  13   1        unsigned char i;
  14   1      
  15   1        _nop_();
  16   1        i = 11;
  17   1        while (--i);
  18   1      }
  19          //**************************************
  20          //I2C起始信号
  21          //**************************************
  22          void I2C_Start()
  23          {
  24   1          SDA = 1;                    //拉高数据线
  25   1          SCL = 1;                    //拉高时钟线
  26   1          Delay5us();                 //延时
  27   1          SDA = 0;                    //产生下降沿
  28   1          Delay5us();                 //延时
  29   1          SCL = 0;                    //拉低时钟线
  30   1      }
  31          //**************************************
  32          //I2C停止信号
  33          //**************************************
  34          void I2C_Stop()
  35          {
  36   1          SDA = 0;                    //拉低数据线
  37   1          SCL = 1;                    //拉高时钟线
  38   1          Delay5us();                 //延时
  39   1          SDA = 1;                    //产生上升沿
  40   1          Delay5us();                 //延时
  41   1      }
  42          //**************************************
  43          //I2C发送应答信号
  44          //入口参数:ack (0:ACK 1:NAK)
  45          //**************************************
  46          void I2C_SendACK(bit ack)
  47          {
  48   1          SDA = ack;                  //写应答信号
  49   1          SCL = 1;                    //拉高时钟线
  50   1          Delay5us();                 //延时
  51   1          SCL = 0;                    //拉低时钟线
  52   1          Delay5us();                 //延时
  53   1      }
  54          //**************************************
C51 COMPILER V9.60.0.0   MPU                                                               02/03/2022 15:41:41 PAGE 2   

  55          //I2C接收应答信号
  56          //**************************************
  57          bit I2C_RecvACK()
  58          {
  59   1          SCL = 1;                    //拉高时钟线
  60   1          Delay5us();                 //延时
  61   1          CY = SDA;                   //读应答信号
  62   1          SCL = 0;                    //拉低时钟线
  63   1          Delay5us();                 //延时
  64   1          return CY;
  65   1      }
  66          //**************************************
  67          //向I2C总线发送一个字节数据
  68          //**************************************
  69          void I2C_SendByte(uchar dat)
  70          {
  71   1          uchar i;
  72   1          for (i=0; i<8; i++)         //8位计数器
  73   1          {
  74   2              dat <<= 1;              //移出数据的最高位
  75   2              SDA = CY;               //送数据口
  76   2              SCL = 1;                //拉高时钟线
  77   2              Delay5us();             //延时
  78   2              SCL = 0;                //拉低时钟线
  79   2              Delay5us();             //延时
  80   2          }
  81   1          I2C_RecvACK();
  82   1      }
  83          //**************************************
  84          //从I2C总线接收一个字节数据
  85          //**************************************
  86          uchar I2C_RecvByte()
  87          {
  88   1          uchar i;
  89   1          uchar dat = 0;
  90   1          SDA = 1;                    //使能内部上拉,准备读取数据,
  91   1          for (i=0; i<8; i++)         //8位计数器
  92   1          {
  93   2              dat <<= 1;
  94   2              SCL = 1;                //拉高时钟线
  95   2              Delay5us();             //延时
  96   2              dat |= SDA;             //读数据               
  97   2              SCL = 0;                //拉低时钟线
  98   2              Delay5us();             //延时
  99   2          }
 100   1          return dat;
 101   1      }
 102          //**************************************
 103          //向I2C设备写入一个字节数据
 104          //**************************************
 105          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 106          {
 107   1          I2C_Start();                  //起始信号
 108   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 109   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 110   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 111   1          I2C_Stop();                   //发送停止信号
 112   1      }
 113          //**************************************
 114          //从I2C设备读取一个字节数据
 115          //**************************************
 116          uchar Single_ReadI2C(uchar REG_Address)
C51 COMPILER V9.60.0.0   MPU                                                               02/03/2022 15:41:41 PAGE 3   

 117          {
 118   1        uchar REG_data;
 119   1        I2C_Start();                   //起始信号
 120   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 121   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始  
 122   1        I2C_Start();                   //起始信号
 123   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 124   1        REG_data=I2C_RecvByte();       //读出寄存器数据
 125   1        I2C_SendACK(1);                //接收应答信号
 126   1        I2C_Stop();                    //停止信号
 127   1        return REG_data;
 128   1      }
 129          //**************************************
 130          //初始化MPU6050
 131          //**************************************
 132          void InitMPU6050()
 133          {
 134   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
 135   1        Single_WriteI2C(SMPLRT_DIV, 0x07);
 136   1        Single_WriteI2C(CONFIG, 0x06);
 137   1        Single_WriteI2C(GYRO_CONFIG, 0x18);
 138   1        Single_WriteI2C(ACCEL_CONFIG, 0x01);
 139   1      }
 140          //**************************************
 141          //合成数据
 142          //**************************************
 143          int GetData(uchar REG_Address)
 144          {
 145   1        char H,L;
 146   1        H=Single_ReadI2C(REG_Address);
 147   1        L=Single_ReadI2C(REG_Address+1);
 148   1        return (H<<8)+L;   //合成数据
 149   1      }
 150          //**************************************
 151          //显示温度
 152          //**************************************
 153          float Get_temp()
 154          { 
 155   1        char Temp_h,Temp_l;
 156   1        float Temperature;
 157   1        Temp_h=Single_ReadI2C(TEMP_OUT_H); //读取温度
 158   1        Temp_l=Single_ReadI2C(TEMP_OUT_L); //读取温度
 159   1        Temperature=Temp_h<<8|Temp_l;     //合成温度
 160   1        Temperature = ((double) (Temperature + 13200)) / 280 - 41.6; // 计算出温度=81.7℃温度5.1 
 161   1          return  Temperature ;
 162   1        //lcd_printf(dis,Temperature);     //转换数据显示
 163   1      //  DisplayListChar(11,1,dis,4);     //启始列，行，显示数组，显示位数
 164   1      }
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
