C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2022 10:22:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /**
   2            ***************************************************************************************
   3            * 文  件：工程主函数源文件
   4            * 芯  片：AT89S52
   5            * 晶  振：12MHz
   6            ***************************************************************************************
   7            */
   8          
   9          #include <reg52.h>  //52系列单片机头文件
  10          #include "delay.h"  //延时函数实现头文件
  11          #include "lcd1602.h"  //LCD1602实现头文件
  12           
  13          sbit LS164_DATA = P0^0;  //74LS164数据线
  14          sbit LS164_CLK = P0^1;  //74LS164时钟线
  15          sbit LS165_SH_LD = P0^2;  //74LS165移位控制线
  16          sbit LS165_DATA = P0^3;  //74LS165数据线
  17          sbit LS165_CLK = P0^4;  //74LS165时钟线
  18           
  19          //7段共阳极数码管段码，0~f，不带小数点
  20          unsigned char tube[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0x88,0x83,0xC6,0xA1,0x86,0x8E};
  21          unsigned char LED_Num[4]={0,0,0,0};  //存储4个数码管显示的数字
  22           
  23          /**
  24            ***************************************************************************************
  25            * 函  数：74LS164写32位扩展引脚函数
  26            * 参  数：state：要写入的32位数据
  27            * 返回值：无
  28            ***************************************************************************************
  29            */
  30          void LS164_Write(unsigned long state)  //74LS164写32位扩展引脚函数
  31          {
  32   1        unsigned char i;
  33   1        for(i=0;i<32;i++)  //循环写32位扩展引脚状态
  34   1        {
  35   2          LS164_CLK = 0;
  36   2          if(state & 0x80000000)
  37   2          {
  38   3            LS164_DATA = 1;
  39   3          }
  40   2          else
  41   2          {
  42   3            LS164_DATA = 0;
  43   3          }
  44   2          LS164_CLK = 1;
  45   2          state = state<<1;
  46   2        }
  47   1      }
  48           
  49          /**
  50            ***************************************************************************************
  51            * 函  数：74LS165读32位扩展引脚函数
  52            * 参  数：无
  53            * 返回值：state：读取的32位数据
  54            ***************************************************************************************
C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2022 10:22:27 PAGE 2   

  55            */
  56          unsigned long LS165_Read(void)  //74LS165读32位扩展引脚函数
  57          {
  58   1        unsigned char i;  //计数变量
  59   1        unsigned long state = 0;  //读取的32位数据
  60   1        LS165_SH_LD = 0;  //并行口的8位数据被置入内部的8个触发器
  61   1        LS165_SH_LD = 1;  //并行输入被封锁，移位操作开始
  62   1        for(i=0;i<32;i++)
  63   1        {
  64   2          state = state<<1;  //数据左移1位
  65   2          if(LS165_DATA)  //若引脚为高电平
  66   2          {
  67   3            state |= 0x01;  //最低位置1
  68   3          }
  69   2          LS165_CLK = 0;
  70   2          LS165_CLK = 1;  //上升沿数据移位
  71   2        }
  72   1        return state;  //返回读取的数据
  73   1      }
  74           
  75          /**
  76            ***************************************************************************************
  77            * 函  数：读取当前4个数码管显示的数字
  78            * 参  数：无
  79            * 返回值：无
  80            ***************************************************************************************
  81            */
  82          void Tube_Read(void)  //读取当前4个数码管显示的数字
  83          {
  84   1        unsigned char i,j;  //计数变量
  85   1        unsigned long state;  //32位扩展引脚状态
  86   1        state = LS165_Read();  //读取所有扩展引脚状态
  87   1        LED_Num[0] = (unsigned char)(state&0xFF);  //扩展引脚EPA0~8状态
  88   1        LED_Num[1] = (unsigned char)((state>>8)&0xFF);  //扩展引脚EPB0~8状态
  89   1        LED_Num[2] = (unsigned char)((state>>16)&0xFF);  //扩展引脚EPC0~8状态
  90   1        LED_Num[3] = (unsigned char)((state>>24)&0xFF);  //扩展引脚EPD0~8状态
  91   1        for(i=0;i<4;i++)
  92   1        {
  93   2          for(j=0;j<16;j++)
  94   2          {
  95   3            if(LED_Num[i]==tube[j])  //根据引脚状态判断显示的数字
  96   3            {
  97   4              LED_Num[i] = j;  //数码管i+1显示的数字为j
  98   4              break;
  99   4            }
 100   3          }
 101   2        }
 102   1      }
 103           
 104          /**
 105            ***************************************************************************************
 106            * 函  数：指定数码管显示指定数字函数
 107            * 参  数：serial：数码管序号，1~4
 108            * 参  数：num：指定显示的数字，0~9
 109            * 返回值：无
 110            ***************************************************************************************
 111            */
 112          void Tube_Write(unsigned char serial, unsigned char num)  //指定数码管serial显示指定数字num函数
 113          {
 114   1        unsigned long state;  //LS164需写的32位扩展引脚状态
 115   1        if((serial>=1)&&(serial<=4)&&(num>=0)&&(num<=9))
 116   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2022 10:22:27 PAGE 3   

 117   2          state = LS165_Read();  //LS165读取当前所有扩展引脚状态
 118   2          switch(serial)  //指定数码管serial
 119   2          {
 120   3            case 1:{  //指定第1个数码管显示数字num
 121   4              state &= 0xFFFFFF00;
 122   4              state |= tube[num];
 123   4              break;
 124   4            }
 125   3            case 2:{  //指定第2个数码管显示数字num
 126   4              state &= 0xFFFF00FF;
 127   4              state |= (((unsigned long)tube[num])<<8);
 128   4              break;
 129   4            }
 130   3            case 3:{  //指定第3个数码管显示数字num
 131   4              state &= 0xFF00FFFF;
 132   4              state |= (((unsigned long)tube[num])<<16);
 133   4              break;
 134   4            }
 135   3            case 4:{  //指定第4个数码管显示数字num
 136   4              state &= 0x00FFFFFF;
 137   4              state |= (((unsigned long)tube[num])<<24);
 138   4              break;
 139   4            }
 140   3          }
 141   2          LS164_Write(state);  //输出所有32位扩展引脚状态
 142   2        }
 143   1      }
 144           
 145          /**
 146            ***************************************************************************************
 147            * 函  数：工程主函数
 148            * 参  数：无
 149            * 返回值：无
 150            ***************************************************************************************
 151            */
 152          void main(void)  //工程主函数
 153          {
 154   1        unsigned char i,j;  //计数变量
 155   1        LS164_Write(0xFFFFFFFF);  //所有数码管灭
 156   1        LCD1602_Init();  //LCD1602模块初始化
 157   1        while(1)
 158   1        {
 159   2          for(i=0;i<10;i++)  //4个数码管同时循环显示0~9
 160   2          {
 161   3            for(j=0;j<4;j++)  //分别指定4个数码管显示同一数字
 162   3            {
 163   4              Tube_Write(j+1,i);  //指定数码管显示数字
 164   4            }
 165   3            Tube_Read();  //读取数码管显示的数字
 166   3            for(j=0;j<4;j++)  //在LCD1602中显示
 167   3            {
 168   4              LCD1602_DispChar(1,j+1,LED_Num[j]+48);  //LCD1602指定行列显示字符
 169   4            }
 170   3            delay_ms(2000);  //延时
 171   3          }
 172   2        }
 173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    600    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2022 10:22:27 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
