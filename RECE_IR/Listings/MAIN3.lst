C51 COMPILER V9.60.0.0   MAIN3                                                             05/08/2022 15:39:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN3
OBJECT MODULE PLACED IN .\Objects\MAIN3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE MAIN3.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\MAI
                    -N3.lst) TABS(2) OBJECT(.\Objects\MAIN3.obj)

line level    source

   1          //#include "STC15W4K.H"
   2          //#include <STC15F2K60S2.H>
   3          #include <STC12C5A60S2.H>
   4          #include "intrins.h"//如果延时函数当中所用了nop()就需要添加此头文件
   5          #include <stdio.h>         // 为使用KEIL自带的库函数printf而加入
   6          #include <string.h> 
   7          
   8          sbit IR=P3^2;  //红外接口标志         //红外接收器数据线 注意要带中断功能。
   9          unsigned char  irtime;//红外用全局变量
  10          
  11          bit irpro_ok,irok; //处理OK，接收OK
  12          
  13          bit InFrared_Way = 0;
  14          unsigned char ir_flag;
  15          unsigned char Data[4] ;
  16          unsigned char   ircode[4];//红外接收
  17          unsigned int  HighTime ,LowTime;
  18          
  19          bit ir_read(unsigned char *pbuf);
  20          void delay(unsigned int x)    //x*0.14MS
  21          {
  22   1       unsigned char i;
  23   1        while(x--)
  24   1       {
  25   2        for (i = 0; i<13; i++) {}
  26   2       }
  27   1      }
  28          
  29          
  30          /*------------------------------------------------
  31                            定时器0中断处理
  32          ------------------------------------------------*/
  33          
  34          void tim0_isr (void) interrupt 1 using 1
  35          {
  36   1          
  37   1      }
  38            
  39          /*------------------------------------------------
  40                          定时器0初始化
  41          ------------------------------------------------*/
  42          void TIM0init(void)//定时器0初始化
  43          {  
  44   1        AUXR &= 0x7F;   //定时器时钟12T模式
  45   1        TMOD &= 0xF0;
  46   1        TMOD |= 0x01;//设置定时器0的工作方式1
  47   1        TR0 = 0;   //关闭定时器0  
  48   1      
  49   1      }
  50           
  51          /*------------------------------------------------
  52                          红外码值处理
  53          ------------------------------------------------*/
  54          
C51 COMPILER V9.60.0.0   MAIN3                                                             05/08/2022 15:39:25 PAGE 2   

  55          /*------------------------------------------------
  56                            外部中断0初始化
  57          ------------------------------------------------*/
  58          void EX0init(void)
  59          {
  60   1        IR = 1;
  61   1       IT0 = 1;   //指定外部中断0下降沿触发，INT0 (P3.2)
  62   1       EX0 = 1;   //打开外部中断
  63   1       EA = 1;    //开总中断
  64   1      }
  65          void EX0_ISR(void) interrupt 0 //外部中断0服务函数
  66          {
  67   1      //  EX0 = 0;//关闭外部中断
  68   1      //  TH0 = 0;//定时器的初值清零，
  69   1      //  TL0 = 0;
  70   1      //  TR0 = 1;//打开定时器0，计算低电平的时间
  71   1      //  while(IR==0);
  72   1      //  TR0 = 0;
  73   1      //  LowTime = TH0*256 + TL0;//低电平的时间 us
  74   1      //  if((LowTime > 8500)&&(LowTime < 9500)!=1)//如果不是9ms，则退出
  75   1      //  {
  76   1      //  EX1 = 1;
  77   1      //    return;
  78   1      //  }
  79   1      //  TH0 = 0;///定时器的初值清零，
  80   1      //  TL0 = 0;
  81   1      //  TR0 = 1;//打开定时器0，计算高电平的时间（引导码）
  82   1      //  while(IR);
  83   1      //  TR0 = 0;
  84   1      //  HighTime = TH0*256 + TL0;//高电平的时间 us
  85   1      //  if((HighTime > 4000)&& (HighTime < 5000))
  86   1      //  {
  87   1      //    
  88   1      //  }
  89   1      InFrared_Way  = 1;
  90   1      }  
  91          void InFrared_Init(void)
  92          {
  93   1           //  unsigned char i, j;  //定义4个数据，每个数据8个位，i表示数据，j表示位。
  94   1         //   unsigned int  HighTime,LowTime;
  95   1              TH0 = 0;
  96   1             TL0 = 0;    //定时器1清0
  97   1             TR0 = 1; //允许定时器0计时。
  98   1            while(IR ==0);
  99   1              TR0 = 0;
 100   1        LowTime = TH0*256 + TL0;//低电平的时间 us
 101   1        if((LowTime > 8500)&&(LowTime < 9500)!=1)//如果不是9ms，则退出
 102   1        {
 103   2        EX1 = 1;
 104   2          return;
 105   2        }
 106   1        TH0 = 0;///定时器的初值清零，
 107   1        TL0 = 0;
 108   1        TR0 = 1;//打开定时器0，计算高电平的时间（引导码）
 109   1        while(IR);
 110   1        TR0 = 0;//关闭定时器，取值
 111   1        HighTime = TH0*256 + TL0;//高电平的时间 us
 112   1        if((HighTime > 4000)&& (HighTime < 5000))//如果引导码正常，等待4.5ms高电平
 113   1        {
 114   2          ir_flag = ir_read(ircode);//读数据
 115   2        }
 116   1        
C51 COMPILER V9.60.0.0   MAIN3                                                             05/08/2022 15:39:25 PAGE 3   

 117   1      
 118   1      //              }
 119   1             
 120   1        EX0 = 1 ;
 121   1      }
 122          bit ir_read(unsigned char *pbuf)
 123          {
 124   1      //  unsigned char cnt;
 125   1        unsigned char i,j;
 126   1        unsigned char temp = 0;
 127   1                      for (i = 0; i < 4; i++)//开始接收数据。
 128   1                    {//接收一个字节，8bit
 129   2                           for (j = 0; j < 8; j++)//接收4组8位数据。
 130   2                           {
 131   3                      temp = temp >> 1;
 132   3                             TH0 = 0;
 133   3                             TL0 = 0;
 134   3                             TR0 =1;
 135   3                             while(IR==0);//等待低电平结束
 136   3                             TR0 = 0;//关闭定时器，取值
 137   3                            LowTime = TH0*256 + TL0;//数据的低电平的时间 us 
 138   3                             
 139   3                             TH0 = 0;
 140   3                             TL0 = 0;
 141   3                             TR0 =1;
 142   3                             while(IR);//等待低电平结束
 143   3                              TR0 = 0;//关闭定时器，取值
 144   3                          HighTime = TH0*256 + TL0;//数据的高电平的时间 us
 145   3                             if((LowTime < 360) ||(LowTime > 680) )return 0;//560us以内
 146   3                             
 147   3                              if((HighTime > 500) &&(HighTime < 600) )return 0;//560us以内
 148   3                          temp = temp & 0x7f;
 149   3                              if((HighTime > 1500) &&(HighTime < 1800) )return 0;//560us以内
 150   3                          temp = temp |0x80;
 151   3                           }
 152   2                         pbuf[i]  = temp;
 153   2                         temp = 0;
 154   2                         }
 155   1                           if((pbuf[0]+pbuf[1]) == 255) //效验数据正确性
 156   1                            if((pbuf[2]+pbuf[3]) == 255) return 1;
 157   1                              
 158   1                            else return 0;
 159   1      }
 160          void UART_init(void)
 161          {     
 162   1        PCON &= 0x7F;   //波特率不倍速
 163   1        SCON = 0x50;    //8位数据,可变波特率
 164   1        AUXR |= 0x04;   //定时器时钟1T模式
 165   1        BRT = 0xDC;   //设置定时重载值
 166   1        AUXR |= 0x01;   //串口1使用独立波特率发射器为波特率发生器
 167   1        AUXR |= 0x10;   //启动独立波特率发射器
 168   1        TI=1;     // 很关键，使用printf函数时必须有此命令
 169   1      } 
 170          
 171          void main()
 172          { 
 173   1      
 174   1         EX0init(); //初始化外部中断
 175   1        TIM0init();
 176   1        UART_init();   // 初始化串口
 177   1        //printf_String() ;
 178   1         while(1)//主循环
C51 COMPILER V9.60.0.0   MAIN3                                                             05/08/2022 15:39:25 PAGE 4   

 179   1         {
 180   2         if (InFrared_Way == 1)
 181   2           {
 182   3                           EX0 = 0;//关闭外部中断。                    
 183   3                           InFrared_Init();// 初始化
 184   3                           TR0 = 1;  //开始定时器0计时。
 185   3                           EX0 = 1;//打开外部中断
 186   3                           InFrared_Way = 0; //清零InFrared_Way ，已经结束红外接收。
 187   3                        printf("RECE_IR DATA:%02bx-%02bx-%02bx-%02bx \n", Data[0], Data[1], Data[2], Data[3]); 
 188   3              
 189   3                //strcpy(IRcord, "");
 190   3                memset(Data, 0, sizeof(Data));          //清空数组
 191   3            }
 192   2             }
 193   1      }
 194          
 195          
 196          
 197               
 198               
 199               
 200               
*** WARNING C291 IN LINE 159 OF MAIN3.C: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    526    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
