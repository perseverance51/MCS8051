C51 COMPILER V9.60.0.0   51______MPU6050                                                   02/03/2022 13:37:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 51______MPU6050
OBJECT MODULE PLACED IN .\Objects\51-串口-mpu6050.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 51-串口-mpu6050.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\STC15simpleMPU6050)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\51-串口-mpu6050.lst) TABS(2) OBJECT(.\Objects\51-串口-mpu6050.obj)

line level    source

   1          //****************************************
   2          // Update to MPU6050 by shinetop
   3          // MCU: STC89C52
   4          // 2012.3.1
   5          // 功能: 显示加速度计和陀螺仪的10位原始数据
   6          //****************************************
   7          // GY-52 MPU3050 IIC测试程序
   8          // 使用单片机STC89C51 
   9          // 晶振：11.0592M
  10          // 显示：LCD1602
  11          // 编译环境 Keil uVision2
  12          // 参考宏晶网站24c04通信程序
  13          // 时间：2011年9月1日
  14          // QQ：531389319
  15          //****************************************
  16          //#include <REG52.H>  
  17          #include "config.h"
  18          #include <math.h>    //Keil library  
  19          #include <stdio.h>   //Keil library 
  20          #include <INTRINS.H>
  21          
  22          typedef unsigned char  uchar;
  23          typedef unsigned short ushort;
  24          typedef unsigned int   uint;
  25          //****************************************
  26          // 定义51单片机端口
  27          //****************************************
  28          #define DataPort P0   //LCD1602数据端口
  29          sbit    SCL=P2^3;     //IIC时钟引脚定义
  30          sbit    SDA=P2^4;     //IIC数据引脚定义
  31          sbit    LCM_RS=P2^0;    //LCD1602命令端口   
  32          sbit    LCM_RW=P2^1;    //LCD1602命令端口   
  33          sbit    LCM_EN=P2^2;    //LCD1602命令端口 
  34          //****************************************
  35          // 定义MPU6050内部地址
  36          //****************************************
  37          #define SMPLRT_DIV    0x19  //陀螺仪采样率，典型值：0x07(125Hz)
  38          #define CONFIG      0x1A  //低通滤波频率，典型值：0x06(5Hz)
  39          #define GYRO_CONFIG   0x1B  //陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
  40          #define ACCEL_CONFIG  0x1C  //加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
  41          #define ACCEL_XOUT_H  0x3B
  42          #define ACCEL_XOUT_L  0x3C
  43          #define ACCEL_YOUT_H  0x3D
  44          #define ACCEL_YOUT_L  0x3E
  45          #define ACCEL_ZOUT_H  0x3F
  46          #define ACCEL_ZOUT_L  0x40
  47          #define TEMP_OUT_H    0x41
  48          #define TEMP_OUT_L    0x42
  49          #define GYRO_XOUT_H   0x43
  50          #define GYRO_XOUT_L   0x44  
  51          #define GYRO_YOUT_H   0x45
  52          #define GYRO_YOUT_L   0x46
  53          #define GYRO_ZOUT_H   0x47
  54          #define GYRO_ZOUT_L   0x48
C51 COMPILER V9.60.0.0   51______MPU6050                                                   02/03/2022 13:37:39 PAGE 2   

  55          #define PWR_MGMT_1    0x6B  //电源管理，典型值：0x00(正常启用)
  56          #define WHO_AM_I      0x75  //IIC地址寄存器(默认数值0x68，只读)
  57          #define SlaveAddress  0xD0  //IIC写入时的地址字节数据，+1为读取
  58          //****************************************
  59          //定义类型及变量
  60          //****************************************
  61          uchar dis[6];             //显示数字(-511至512)的字符数组
  62          int dis_data;           //变量
  63          //int Temperature,Temp_h,Temp_l;  //温度及高低位数据
  64          //****************************************
  65          //函数声明
  66          //****************************************
  67          void  delay(unsigned int k);                    //延时            
  68          void  lcd_printf(uchar *s,int temp_data);
  69          
  70          //MPU6050操作函数
  71          void  InitMPU6050();                          //初始化MPU6050
  72          void  Delay5us();
  73          void  I2C_Start();
  74          void  I2C_Stop();
  75          void  I2C_SendACK(bit ack);
  76          bit   I2C_RecvACK();
  77          void  I2C_SendByte(uchar dat);
  78          uchar I2C_RecvByte();
  79          void  I2C_ReadPage();
  80          void  I2C_WritePage();
  81          void  display_ACCEL_x();
  82          void  display_ACCEL_y();
  83          void  display_ACCEL_z();
  84          uchar Single_ReadI2C(uchar REG_Address);            //读取I2C数据
  85          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);  //向I2C写入数据
  86          //****************************************
  87          //整数转字符串
  88          //****************************************
  89          void lcd_printf(uchar *s,int temp_data)
  90          {
  91   1        if(temp_data<0)
  92   1        {
  93   2          temp_data=-temp_data;
  94   2          *s='-';
  95   2        }
  96   1        else *s=' ';
  97   1      
  98   1        *++s =temp_data/10000+0x30;
  99   1        temp_data=temp_data%10000;     //取余运算
 100   1      
 101   1        *++s =temp_data/1000+0x30;
 102   1        temp_data=temp_data%1000;     //取余运算
 103   1      
 104   1        *++s =temp_data/100+0x30;
 105   1        temp_data=temp_data%100;     //取余运算
 106   1        *++s =temp_data/10+0x30;
 107   1        temp_data=temp_data%10;      //取余运算
 108   1        *++s =temp_data+0x30;   
 109   1      }
 110          //****************************************
 111          
 112          void  SeriPushSend(uchar send_data)
 113          {
 114   1          SBUF=send_data;  
 115   1        while(!TI);TI=0;    
 116   1      }
C51 COMPILER V9.60.0.0   51______MPU6050                                                   02/03/2022 13:37:39 PAGE 3   

 117          //****************************************
 118          //延时
 119          //****************************************
 120          void delay(unsigned int k)  
 121          {           
 122   1        unsigned int i,j;       
 123   1        for(i=0;i<k;i++)
 124   1        {     
 125   2          for(j=0;j<121;j++);
 126   2        }           
 127   1      }
 128          
 129          //**************************************
 130          //延时5微秒(STC90C52RC@12M)
 131          //不同的工作环境,需要调整此函数
 132          //当改用1T的MCU时,请调整此延时函数
 133          //**************************************
 134          void Delay5us()
 135          {
 136   1        _nop_();_nop_();_nop_();_nop_();
 137   1        _nop_();_nop_();_nop_();_nop_();
 138   1        _nop_();_nop_();_nop_();_nop_();
 139   1        _nop_();_nop_();_nop_();_nop_();
 140   1        _nop_();_nop_();_nop_();_nop_();
 141   1        _nop_();_nop_();_nop_();_nop_();
 142   1      }
 143          //**************************************
 144          //I2C起始信号
 145          //**************************************
 146          void I2C_Start()
 147          {
 148   1          SDA = 1;                    //拉高数据线
 149   1          SCL = 1;                    //拉高时钟线
 150   1          Delay5us();                 //延时
 151   1          SDA = 0;                    //产生下降沿
 152   1          Delay5us();                 //延时
 153   1          SCL = 0;                    //拉低时钟线
 154   1      }
 155          //**************************************
 156          //I2C停止信号
 157          //**************************************
 158          void I2C_Stop()
 159          {
 160   1          SDA = 0;                    //拉低数据线
 161   1          SCL = 1;                    //拉高时钟线
 162   1          Delay5us();                 //延时
 163   1          SDA = 1;                    //产生上升沿
 164   1          Delay5us();                 //延时
 165   1      }
 166          //**************************************
 167          //I2C发送应答信号
 168          //入口参数:ack (0:ACK 1:NAK)
 169          //**************************************
 170          void I2C_SendACK(bit ack)
 171          {
 172   1          SDA = ack;                  //写应答信号
 173   1          SCL = 1;                    //拉高时钟线
 174   1          Delay5us();                 //延时
 175   1          SCL = 0;                    //拉低时钟线
 176   1          Delay5us();                 //延时
 177   1      }
 178          //**************************************
C51 COMPILER V9.60.0.0   51______MPU6050                                                   02/03/2022 13:37:39 PAGE 4   

 179          //I2C接收应答信号
 180          //**************************************
 181          bit I2C_RecvACK()
 182          {
 183   1          SCL = 1;                    //拉高时钟线
 184   1          Delay5us();                 //延时
 185   1          CY = SDA;                   //读应答信号
 186   1          SCL = 0;                    //拉低时钟线
 187   1          Delay5us();                 //延时
 188   1          return CY;
 189   1      }
 190          //**************************************
 191          //向I2C总线发送一个字节数据
 192          //**************************************
 193          void I2C_SendByte(uchar dat)
 194          {
 195   1          uchar i;
 196   1          for (i=0; i<8; i++)         //8位计数器
 197   1          {
 198   2              dat <<= 1;              //移出数据的最高位
 199   2              SDA = CY;               //送数据口
 200   2              SCL = 1;                //拉高时钟线
 201   2              Delay5us();             //延时
 202   2              SCL = 0;                //拉低时钟线
 203   2              Delay5us();             //延时
 204   2          }
 205   1          I2C_RecvACK();
 206   1      }
 207          //**************************************
 208          //从I2C总线接收一个字节数据
 209          //**************************************
 210          uchar I2C_RecvByte()
 211          {
 212   1          uchar i;
 213   1          uchar dat = 0;
 214   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 215   1          for (i=0; i<8; i++)         //8位计数器
 216   1          {
 217   2              dat <<= 1;
 218   2              SCL = 1;                //拉高时钟线
 219   2              Delay5us();             //延时
 220   2              dat |= SDA;             //读数据               
 221   2              SCL = 0;                //拉低时钟线
 222   2              Delay5us();             //延时
 223   2          }
 224   1          return dat;
 225   1      }
 226          //**************************************
 227          //向I2C设备写入一个字节数据
 228          //**************************************
 229          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 230          {
 231   1          I2C_Start();                  //起始信号
 232   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 233   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 234   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 235   1          I2C_Stop();                   //发送停止信号
 236   1      }
 237          //**************************************
 238          //从I2C设备读取一个字节数据
 239          //**************************************
 240          uchar Single_ReadI2C(uchar REG_Address)
C51 COMPILER V9.60.0.0   51______MPU6050                                                   02/03/2022 13:37:39 PAGE 5   

 241          {
 242   1        uchar REG_data;
 243   1        I2C_Start();                   //起始信号
 244   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 245   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始  
 246   1        I2C_Start();                   //起始信号
 247   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 248   1        REG_data=I2C_RecvByte();       //读出寄存器数据
 249   1        I2C_SendACK(1);                //接收应答信号
 250   1        I2C_Stop();                    //停止信号
 251   1        return REG_data;
 252   1      }
 253          //**************************************
 254          //初始化MPU6050
 255          //**************************************
 256          void InitMPU6050()
 257          {
 258   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
 259   1        Single_WriteI2C(SMPLRT_DIV, 0x07);
 260   1        Single_WriteI2C(CONFIG, 0x06);
 261   1        Single_WriteI2C(GYRO_CONFIG, 0x18);
 262   1        Single_WriteI2C(ACCEL_CONFIG, 0x01);
 263   1      }
 264          //**************************************
 265          //合成数据
 266          //**************************************
 267          int GetData(uchar REG_Address)
 268          {
 269   1        uchar H,L;
 270   1        H=Single_ReadI2C(REG_Address);
 271   1        L=Single_ReadI2C(REG_Address+1);
 272   1        return (H<<8)+L;   //合成数据
 273   1      }
 274          //**************************************
 275          //在1602上显示10位数据
 276          //**************************************
 277          void Display10BitData(int value,uchar x,uchar y)
 278          {  uchar i;
 279   1      //  value/=64;              //转换为10位数据
 280   1        lcd_printf(dis, value);     //转换数据显示
 281   1        for(i=0;i<6;i++)
 282   1        {
 283   2          SeriPushSend(dis[i]);
 284   2          }
 285   1      
 286   1        //  DisplayListChar(x,y,dis,4); //启始列，行，显示数组，显示长度
 287   1      }
*** WARNING C280 IN LINE 277 OF 51-串口-mpu6050.c: 'x': unreferenced local variable
*** WARNING C280 IN LINE 277 OF 51-串口-mpu6050.c: 'y': unreferenced local variable
 288          //**************************************
 289          //显示温度
 290          //**************************************
 291          //void display_temp()
 292          //{ 
 293          //  Temp_h=Single_ReadI2C(TEMP_OUT_H); //读取温度
 294          //  Temp_l=Single_ReadI2C(TEMP_OUT_L); //读取温度
 295          //  Temperature=Temp_h<<8|Temp_l;     //合成温度
 296          //  Temperature = 35+ ((double) (Temperature + 13200)) / 280; // 计算出温度
 297          //  lcd_printf(dis,Temperature);     //转换数据显示
 298          //  DisplayListChar(11,1,dis,4);     //启始列，行，显示数组，显示位数
 299          //}
 300          
C51 COMPILER V9.60.0.0   51______MPU6050                                                   02/03/2022 13:37:39 PAGE 6   

 301          void init_uart()
 302          {
 303   1        AUXR &= 0xBF;   //定时器时钟12T模式
 304   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
 305   1        TMOD &= 0x0F;   //设置定时器模式
 306   1      //  TMOD=0x21;        
 307   1      //  TH1=0xfd;       
 308   1      //  TL1=0xfd;   
 309   1          
 310   1        SCON=0x50;
 311   1        PS=1;      //串口中断设为高优先级别
 312   1        TR0=1;     //启动定时器     
 313   1        TR1=1;
 314   1        ET0=1;     //打开定时器0中断      
 315   1        ES=1; 
 316   1        EA=1;
 317   1      }
 318          
 319          //*********************************************************
 320          //主程序
 321          //*********************************************************
 322          void main()
 323          { 
 324   1        delay(500);   //上电延时    
 325   1      //  InitLcd();    //液晶初始化
 326   1         init_uart();
 327   1        InitMPU6050();  //初始化MPU6050
 328   1        delay(150);
 329   1        while(1)
 330   1        {
 331   2        
 332   2          Display10BitData(GetData(ACCEL_XOUT_H),2,0);  //显示X轴加速度
 333   2          Display10BitData(GetData(ACCEL_YOUT_H),7,0);  //显示Y轴加速度
 334   2          Display10BitData(GetData(ACCEL_ZOUT_H),12,0); //显示Z轴加速度
 335   2          Display10BitData(GetData(GYRO_XOUT_H),2,1); //显示X轴角速度
 336   2          Display10BitData(GetData(GYRO_YOUT_H),7,1); //显示Y轴角速度
 337   2          Display10BitData(GetData(GYRO_ZOUT_H),12,1);  //显示Z轴角速度
 338   2           
 339   2          SeriPushSend(0x0d); 
 340   2              SeriPushSend(0x0a);//换行，回车
 341   2          delay(100);
 342   2        }
 343   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    741    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
