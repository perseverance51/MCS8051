C51 COMPILER V9.60.0.0   ________________                                                  06/28/2022 23:07:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ________________
OBJECT MODULE PLACED IN .\obj\矩阵键盘中断扫描.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 矩阵键盘中断扫描.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\o
                    -bj\矩阵键盘中断扫描.lst) TABS(2) OBJECT(.\obj\矩阵键盘中断扫描.obj)

line level    source

   1          /*-----------------------------------------------
   2            名称：矩阵键盘依次输入控制 使用行列逐级扫描 中断方式
   3          
   4            内容：如计算器输入数据形式相同 从右至左 使用行列扫描方法
   5                  中断方式可以有效提供cpu工作效率，在有按键动作时才扫描，平时不进行扫描工作
   6          ------------------------------------------------*/
   7          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
   8          //#include<intrins.h> 
   9          
  10          #define DataPort P0 //定义数据端口 程序中遇到DataPort 则用P0 替换
  11          #define KeyPort  P1
  12          #define   MAIN_Fosc     12000000uL  //定义主时钟
  13          unsigned char T0RH = 0; //T0 重载值的高字节
  14          unsigned char T0RL = 0; //T0 重载值的低字节
  15          
  16          sbit LATCH1=P2^2;//定义锁存使能端口 段锁存
  17          sbit LATCH2=P2^3;//                 位锁存
  18          sbit P32 =P3^2;
  19          bit KeyPressFlag;//定义按键标志位
  20          unsigned char keycode;
  21          unsigned char code DuanMa[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};// 显示段码值0~9
  22          
  23          void DelayMs(unsigned char t); //ms级延时
  24          void Display();//数码管显示函数
  25          void KeyScan(void);//键盘扫描
  26          unsigned char KeyPro(void);
  27          void Init_Timer0(void);//定时器初始化
  28          void Init_INT0(void);  //外部中断0初始化和
  29          /*------------------------------------------------
  30                              主函数
  31          ------------------------------------------------*/
  32          void main (void)
  33          {
  34   1        KeyPort =0xf0;
  35   1        Init_Timer0();
  36   1        Init_INT0();
  37   1      while (1) KeyPort = 0xf0;       //主循环
  38   1      }
  39          
  40          /*------------------------------------------------
  41           mS延时函数
  42          ------------------------------------------------*/
  43          void delay(unsigned int xms)  // 延迟函数
  44          {
  45   1        unsigned int i,j;
  46   1        for(i=xms;i>0;i--)
  47   1          for(j=112;j>0;j--);
  48   1      }
  49          /*数码管显示函数*/
  50          void Display()
  51          {
  52   1            static unsigned char k=0;
  53   1           DataPort=0x00;   //清空数据，防止有交替重影
  54   1             LATCH1=0;
C51 COMPILER V9.60.0.0   ________________                                                  06/28/2022 23:07:20 PAGE 2   

  55   1             LATCH2=1;
  56   1             DataPort=DuanMa[keycode/10]; //取位码 
  57   1          delay(5);
  58   1          LATCH1=1;//关掉上面显示的十位显示
  59   1             LATCH2=1;     //位锁存
  60   1             LATCH2=0;//打开个位显示
  61   1        
  62   1           DataPort=0x00;   //清空数据，防止有交替重影
  63   1             DataPort=DuanMa[keycode%10];  //取显示数据，段码
  64   1            delay(5);
  65   1          k = k<2 ? k+1 : 0;
  66   1      }
  67          /*------------------------------------------------
  68                              定时器初始化子程序
  69          ------------------------------------------------*/
  70          void Init_Timer0(void)
  71          {
  72   1        unsigned long tmp; //临时变量
  73   1       TMOD |= 0x01;    //使用模式1，16位定时器，使用"|"符号可以在使用多个定时器时不受影响         
  74   1          tmp = MAIN_Fosc / 12; //定时器计数频率
  75   1          tmp = (tmp * 50) / 1000; //计算所需的计数值50ms
  76   1          tmp = 65536 - tmp; //计算定时器重载值
  77   1          tmp = tmp + 12; //补偿中断响应延时造成的误差
  78   1          T0RH = (unsigned char)(tmp>>8); //定时器重载值拆分为高低字节
  79   1          T0RL = (unsigned char)tmp;
  80   1          TMOD &= 0xF0; //清零 T0 的控制位
  81   1          TMOD |= 0x01; //配置 T0 为模式 1
  82   1          TH0 = T0RH; //加载 T0 重载值
  83   1          TL0 = T0RL;
  84   1      
  85   1       EA=1;            //总中断打开
  86   1       ET0=1;           //定时器中断打开
  87   1       TR0=1;           //定时器开关打开
  88   1      }
  89          /*------------------------------------------------
  90                           定时器中断子程序
  91          ------------------------------------------------*/
  92          void Timer0_isr(void) interrupt 1 
  93          {
  94   1       TH0=(65536-50000)/256;     //重新赋值 50ms
  95   1       TL0=(65536-50000)%256;
  96   1       Display();       // 调用数码管扫描
  97   1      }
  98          /*------------------------------------------------
  99          按键扫描函数，返回扫描键值
 100          ------------------------------------------------*/
 101          void KeyScan(void)  //键盘扫描函数，使用行列逐级扫描法
 102          {
 103   1          unsigned char t,key;
 104   1      /**********************第一行矩阵*******************/
 105   1      
 106   1        KeyPort = 0xfe; //  1111 1110 让P3.0口输出低
 107   1        t = KeyPort;
 108   1        t=t&0xf0; // 1111 0000 屏蔽后四位
 109   1      
 110   1        if(t != 0xf0) // 说明按键有被按住
 111   1        {
 112   2          delay(10);
 113   2          t = KeyPort;
 114   2          t = t&0xf0;
 115   2          if( t != 0xf0)
 116   2          {
C51 COMPILER V9.60.0.0   ________________                                                  06/28/2022 23:07:20 PAGE 3   

 117   3            t = KeyPort;
 118   3            switch(t)
 119   3            {
 120   4              case 0xee:
 121   4                key = 1;   // 此时为 1110 1110  S1按键被按下
 122   4                break;
 123   4              case 0xde:
 124   4                key = 2;   // 此时为 1101 1110  S2按键被按下
 125   4                break;
 126   4              case 0xbe:
 127   4                key = 3;   // 此时为 1011 1110  S3按键被按下
 128   4                break;
 129   4              case 0x7e:
 130   4                key = 4;   // 此时为 0111 1110  S4按键被按下
 131   4                break;    
 132   4            }
 133   3            // 判断按键是否被松开
 134   3            while( t != 0xf0){
 135   4              t = KeyPort;
 136   4              t = t&0xf0;
 137   4            }
 138   3            keycode = key;    
 139   3          }
 140   2        
 141   2        }
 142   1      
 143   1      /**********************第二行矩阵*******************/
 144   1      
 145   1        KeyPort = 0xfd; //  1111 1101 让P3.1口输出低
 146   1        t = KeyPort;
 147   1        t=t&0xf0; // 1111 0000 屏蔽后四位
 148   1        if(t != 0xf0) // 说明按键有被按住
 149   1        {
 150   2          delay(10);
 151   2          t = KeyPort;
 152   2          t = t&0xf0;
 153   2          if( t != 0xf0)
 154   2          {
 155   3            t = KeyPort;
 156   3            switch(t)
 157   3            {
 158   4              case 0xed:
 159   4                key = 5;   // 此时为 1110 1101  S5按键被按下
 160   4                break;
 161   4              case 0xdd:
 162   4                key = 6;   // 此时为 1101 1101  S6按键被按下
 163   4                break;
 164   4              case 0xbd:
 165   4                key = 7;   // 此时为 1011 1101  S7按键被按下
 166   4                break;
 167   4              case 0x7d:
 168   4                key = 8;   // 此时为 0111 1101  S8按键被按下
 169   4                break;
 170   4          
 171   4            }
 172   3            // 判断按键是否被松开
 173   3            while( t != 0xf0){
 174   4              t = KeyPort;
 175   4              t = t&0xf0;
 176   4            }
 177   3                  keycode = key;  
 178   3          }
C51 COMPILER V9.60.0.0   ________________                                                  06/28/2022 23:07:20 PAGE 4   

 179   2        
 180   2        }
 181   1      
 182   1      /**********************第三行矩阵*******************/
 183   1      
 184   1        KeyPort = 0xfb; //  1111 1011 让P3.2口输出低
 185   1        t = KeyPort;
 186   1        t=t&0xf0; // 1111 0000 屏蔽后四位
 187   1      
 188   1        if(t != 0xf0) // 说明按键有被按住
 189   1        {
 190   2          delay(10);
 191   2          t = KeyPort;
 192   2          t = t&0xf0;
 193   2          if( t != 0xf0)
 194   2          {
 195   3            t = KeyPort;
 196   3            switch(t)
 197   3            {
 198   4              case 0xeb:
 199   4                key = 9;   // 此时为 1110 1011  S9按键被按下
 200   4                break;
 201   4              case 0xdb:
 202   4                key = 10;   // 此时为 1101 1011  S10按键被按下
 203   4                break;
 204   4              case 0xbb:
 205   4                key = 11;   // 此时为 1011 1011 S11按键被按下
 206   4                break;
 207   4              case 0x7b:
 208   4                key = 12;   // 此时为 0111 1011  S12按键被按下
 209   4                break;    
 210   4            }
 211   3            // 判断按键是否被松开
 212   3            while( t != 0xf0){
 213   4              t = KeyPort;
 214   4              t = t&0xf0;
 215   4            }
 216   3            keycode = key;    
 217   3          } 
 218   2        }
 219   1      
 220   1      /**********************第四行矩阵*******************/
 221   1      
 222   1        KeyPort = 0xf7; //  1111 0111 让P1.3口输出低
 223   1        t = KeyPort;
 224   1        t = t&0xf0; // 1111 0000 屏蔽后四位
 225   1        if(t != 0xf0) // 说明按键有被按住
 226   1        {
 227   2          delay(10);
 228   2          t = KeyPort;
 229   2          t = t&0xf0;
 230   2          if( t != 0xf0)
 231   2          {
 232   3            t = KeyPort;
 233   3            switch(t)
 234   3            {
 235   4              case 0xe7:
 236   4                key = 13;   // 此时为 1110 0111  S13按键被按下
 237   4                break;
 238   4              case 0xd7:
 239   4                key = 14;   // 此时为 1101 0111  S14按键被按下
 240   4                break;
C51 COMPILER V9.60.0.0   ________________                                                  06/28/2022 23:07:20 PAGE 5   

 241   4              case 0xb7:
 242   4                key = 15;   // 此时为 1011 0111  S15按键被按下
 243   4                break;
 244   4              case 0x77:
 245   4                key = 16;   // 此时为 0111 0111  S16按键被按下
 246   4                break;  
 247   4            }
 248   3            // 判断按键是否被松开
 249   3            while( t != 0xf0){
 250   4              t = KeyPort;
 251   4              t = t&0xf0;
 252   4            }
 253   3            keycode = key;  //  把按键的值发给数组，让其对应的数字打印再数码管上  
 254   3          }
 255   2        }
 256   1      }
 257          
 258          /*------------------------------------------------
 259                     外部中断0初始化
 260          ------------------------------------------------*/
 261          void Init_INT0(void)
 262          {
 263   1        EA=1;          //全局中断开
 264   1        EX0=1;         //外部中断0开
 265   1        IT0=1;         //边沿触发
 266   1      }
 267          
 268          /*------------------------------------------------
 269                           外部中断0程序
 270          ------------------------------------------------*/
 271          void int0() interrupt 0 //在中断服务函数中进行键盘扫描
 272          {
 273   1         KeyScan();
 274   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    684    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
