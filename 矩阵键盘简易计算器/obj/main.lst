C51 COMPILER V9.60.0.0   MAIN                                                              06/29/2022 14:09:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\obj\main.lst)
                    - TABS(2) OBJECT(.\obj\main.obj)

line level    source

   1          /*-----------------------------------------------
   2            4x4键盘矩阵按键简易计算器
   3            内容：整数之间运算，没有小数所有除法得出的结果不正确，有负号运算，
   4          ------------------------------------------------*/
   5          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
   6          #include<stdio.h>
   7          #include"display.h"
   8          #include"delay.h"
   9          #include"keyboard.h"
  10          
  11          
  12          /*------------------------------------------------
  13                              主程序
  14          ------------------------------------------------*/
  15          main()
  16          {
  17   1       unsigned char num,i,sign;                   
  18   1       unsigned char temp[8];        //最大输入8个
  19   1       bit firstflag;
  20   1       int a=0,b=0;
  21   1       unsigned char s;
  22   1      
  23   1       Init_Timer0();   //初始化定时器0
  24   1      while (1)         //主循环
  25   1        {
  26   2      
  27   2      
  28   2       num=KeyPro();  //扫描键盘
  29   2       if(num!=0xff)  //如果扫描是按键有效值则进行处理
  30   2         { 
  31   3          if(i==0)    //输入是第一个字符的时候需要把改行清空，方便观看
  32   3          {
  33   4          for(s=0;s<8;s++) //赋值完成后把缓冲区清零，防止下次输入影响结果
  34   4            TempData[s]=0;
  35   4          }
  36   3        if(('+'==num)|| (i==8) || ('-'==num) || ('x'==num)|| ('/'==num) || ('='==num))//输入数字最大值8，输入符号
             -表示输入结束
  37   3          {
  38   4          i=0;  //计数器复位
  39   4      
  40   4         if(firstflag==0)  //如果是输入的第一个数据，赋值给a，并把标志位置1，到下一个数据输入时可以跳转赋值给b
  41   4             {
  42   5             sscanf(temp,"%d",&a);//从一个字符串输入到变量
  43   5               firstflag=1;
  44   5           }
  45   4          else  
  46   4             sscanf(temp,"%d",&b);
  47   4          for(s=0;s<8;s++) //赋值完成后把缓冲区清零，防止下次输入影响结果
  48   4              temp[s]=0;
  49   4            
  50   4          ///////////////////////
  51   4          if(num!='=')      //判断当前符号位并做相应处理
  52   4             sign=num;      //如果不是等号记下标志位
  53   4          else
C51 COMPILER V9.60.0.0   MAIN                                                              06/29/2022 14:09:02 PAGE 2   

  54   4             {  
  55   5           firstflag=0;   //检测到输入=号，判断上次读入的符合
  56   5               switch(sign)
  57   5               {
  58   6              case '+':a=a+b;
  59   6            break;
  60   6            case '-':a=a-b;
  61   6            break;
  62   6            case 'x':a=a*b;
  63   6            break;
  64   6            case '/':a=a/b;
  65   6            break;
  66   6            default:break;
  67   6             }
  68   5           sprintf(temp,"%d",a);  //打印十进制到临时缓冲区
  69   5           for(s=0;s<8;s++)       //由于打印的是ASCII码值
  70   5              { 
  71   6            if(temp[s]==0)      //所以需要转换，如果为0表示null 数码管上则不能显示，所以赋值0
  72   6                      TempData[s]=0;
  73   6            else if(temp[s]==0x2d)//表示负号，数码管显示负号 0x40
  74   6                 TempData[s]=0x40;
  75   6              else 
  76   6                   TempData[s]=dofly_DuanMa[temp[s]-'0'];//其他0-9负号则进行ASCII 到 数字处理，如当前是'3'，用'3'-
             -'0'=3
  77   6                                                     //'3'的16进制是0x33,'0'的16进制是0x30           
  78   6            }
  79   5           sign=0;a=b=0;            //用完后所有数据清零
  80   5           for(s=0;s<8;s++)
  81   5              temp[s]=0;
  82   5           }
  83   4          }
  84   3      
  85   3         else if(i<16)
  86   3          {
  87   4      
  88   4               temp[i]=num+'0'; 
  89   4               TempData[i]=dofly_DuanMa[num];//输出数据
  90   4             i++;   //输入数值累加
  91   4           }
  92   3        
  93   3          } 
  94   2        }
  95   1      }
  96          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    442    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
