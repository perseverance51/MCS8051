C51 COMPILER V9.59.0.0   MAIN                                                              11/07/2021 13:25:25 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst
                    -) TABS(2) OBJECT(.\list\main.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          
  15          #include  "config.h"
  16          #include  "GPIO.h"
  17          #include  "delay.h"
  18          
  19          /*************  ¹¦ÄÜËµÃ÷  **************
  20          
  21          ±¾³ÌÐòÑÝÊ¾ÅÜÂíµÆ¡£
  22          ³ÌÐòÊ¹ÓÃP2¿ÚÀ´ÑÝÊ¾£¬Êä³öµÍÇý¶¯¡£ÓÃ»§¿ÉÒÔÐÞ¸ÄÎª±ðµÄ¿Ú¡£
  23          
  24          ******************************************/
  25          
  26          /*************  ±¾µØ³£Á¿ÉùÃ÷  **************/
  27          #define u8 unsigned char
  28          #define u16 unsigned int
  29          #define u32 unsigned long
  30          #define s8 signed char
  31          #define s16 signed int
  32          #define s32 signed long
  33          #define KEY_TIME 25                        //°´¼üÏû¶¶Ê±¼ä (ºÁÃë)
  34          #define reset()        IAP_CONTR |= 0x20                //Ð¾Æ¬¸´Î»
  35          #define feed_dog()  WDT_CONTR |= 0x10   //¿´ÃÅ¹·Î¹¹·
  36          u8 code nbr[16] = {                //¹²ÒõÊýÂë¹Ü¶ÎÂë16½øÖÆ
  37              0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71
  38          };
  39          u8 show[4];                //4Î»ÊýÂë¹Üµ±Ç°ÏÔÊ¾µÄ¶ÎÂë ¸ü¸ÄÊýÂë¹ÜÏÔÊ¾µÄ¶ÎÂë Ö»Ðè¸ü¸Ä´ËÊý×é
  40          u8 wink;                //ÉÁË¸µÄÊýÂë¹Ü¶ÎÂë        0x01: µÚÒ»Î»ÉÁË¸ 0x02:µÚ¶þÎ»ÉÁË¸ 0x04: µÚÈýÎ»ÉÁË¸ 0x0F:È
             -«ÉÁË¸ 0x00:È«²»ÉÁË¸
  41          
  42          sbit P3_0 = P3 ^ 0;                //°´¼üS1 (I/O¿Ú¶¨ÒåµÄ°´¼üÎ´¾­Ïû¶¶,ÇëÎðÔÚÖÐ¶ÏÍâÖ±½ÓÊ¹ÓÃ)
  43          sbit P3_1 = P3 ^ 1;                //°´¼üS2
  44          sbit P3_2 = P3 ^ 2;     //ÓÐÔ´·äÃùÆ÷ µÍµçÆ½Ãù½Ð
  45          sbit P3_3 = P3 ^ 3;     //¼ÌµçÆ÷»òMOS¹Ü µÍµçÆ½ÎüºÏ(µ¼Í¨)
  46          u16 S1_ms, S2_ms;                //°´¼ü0¡¢°´¼ü1Á¬Ðø°´ÏÂµÄÊ±¼ä ¶¨Ê±Æ÷ÖÐ¶Ï¼ÆÊý´Ë±äÁ¿ ×î³¤65535ºÁÃë ËÉ¿ªÇåÁã
  47          
  48          u16 delayms;  //¶¨Ê±Æ÷ÖÐ¶ÏÑÓÊ± (ºÁÃë)
  49          u16 time;      //¶¨Ê±Ê±¼ä (Ãë)
  50          u16 beep_ms;   //·äÃùÆ÷Ãù½ÐÊ±¼ä (ºÁÃë)
  51          
  52          u16 bdata Bit16 = 0;    //¶¨Òå16Î»¿ÉÎ»Ñ°Ö·±äÁ¿
  53          sbit delay = Bit16 ^ 0;      //¶¨Ê±Æ÷ÖÐ¶ÏÑÓÊ±ºÁÃë¿ª¹Ø ÖÐ¶ÏÍâÖÃ1 ÑÓÊ±ÍêÖÐ¶ÏÄÚÇå0
C51 COMPILER V9.59.0.0   MAIN                                                              11/07/2021 13:25:25 PAGE 2   

  54          sbit test = Bit16 ^ 1;       //´ËÖµÎª1ÊýÂë¹ÜÈ«ÁÁ ·äÃùÆ÷Ïì ËùÓÐ°´¼üÎÞÐ§ ·ñÔòÕý³£
  55          sbit S1 = Bit16 ^ 2;         //°´¼ü0 Á¬Ðø°´ÏÂNºÁÃëÇå0, ËÉ¿ªÖÃ1(¶¨Ê±Æ÷0ÖÐ¶ÏÏû¶¶)
  56          sbit S2 = Bit16 ^ 3;         //°´¼ü1 (´¦Àí·½Ê½Óë°´¼ü0ÏàÍ¬)
  57          sbit hz10 = Bit16 ^ 4;      //10HzÐÅºÅÔ´ (¶¨Ê±Æ÷0ÖÐ¶Ï²úÉú,ÓÃÓÚ¿ØÖÆÊýÂë¹ÜÉÁË¸)
  58          sbit bak = Bit16 ^ 5;       //°´¼ü³¤°´Ê¶±ð´¦ÀíÓÃ
  59          sbit Beep = Bit16 ^ 6;      //ÓÐÔ´·äÃùÆ÷ µÍµçÆ½Ïì
  60          sbit start = Bit16 ^ 7;     //µ¹¼ÆÊ±¿ª¹Ø ÖÃ1µ¹¼ÆÊ±¿ªÊ¼ Çå0Ôò½áÊø
  61          sbit pause = Bit16 ^ 8;     //1ÔÝÍ£µ¹¼ÆÊ± 0Õý³£
  62          sbit relay = Bit16 ^ 9;     //¼ÌµçÆ÷»òMOS¹Ü µÍµçÆ½ÎüºÏ(µ¼Í¨) 1ÃëÖ»ÄÜÎüºÏ»òÊÍ·Å1´Î
  63          
  64          /*************  ±¾µØ±äÁ¿ÉùÃ÷  **************/
  65          
  66          
  67          /*************  ±¾µØº¯ÊýÉùÃ÷  **************/
  68          
  69          
  70          
  71          /*************  Íâ²¿º¯ÊýºÍ±äÁ¿ÉùÃ÷ *****************/
  72          void InitTimer0() {        //³õÊ¼»¯¶¨Ê±Æ÷0ÖÐ¶Ï
  73   1          TMOD = 0x01;
  74   1          TH0 = 0xFC;
  75   1          TL0 = 0x18;
  76   1          EA = 1;
  77   1          ET0 = 1;
  78   1          TR0 = 1;
  79   1      }
  80          
  81          void beep(u16 ms) {     //·äÃùÆ÷Ãù½Ð ²ÎÊý:Ãù½ÐºÁÃë
  82   1          beep_ms = ms;
  83   1          Beep = 0;
  84   1      }
  85          
  86          u16 set_time() {        //Éè¶¨¶¨Ê±Ê±¼ä
  87   1          u8 n = 0;       //0:±à¼­Ç§Î» 1:°ÙÎ» 2:Ê®Î» 3:¸öÎ»
  88   1          u8 o[4];
  89   1          o[0] = 0; o[1] = 0; o[2] = 0; o[3] = 0;
  90   1          while (1) {
  91   2              feed_dog();
  92   2              wink = 8 >> n;
  93   2              show[0] = nbr[o[0]];
  94   2              show[1] = nbr[o[1]];
  95   2              show[2] = nbr[o[2]];
  96   2              show[3] = nbr[o[3]];
  97   2              if (S2 == 0) {                        //S2°´ÏÂ ¶Ì°´¼Ó1
  98   3                  beep(50);
  99   3                  if (o[n]++ >= 9) o[n] = 0;
 100   3                  show[n] = nbr[o[n]];
 101   3                  delayms = 500; delay = 1;
 102   3                  while (delay && S2 == 0);        //³¤°´ÑÓÊ±µÈ´ý
 103   3                  while (S2_ms >= 500) {                //°´¼ü³¤°´,¿ªÊ¼Á¬¼Ó
 104   4                      feed_dog();
 105   4                      delayms = 125; delay = 1;                //0.125ÃëÁ¬¼ÓÒ»´Î
 106   4                      while (delay && S2 == 0);
 107   4                      beep(50);
 108   4                      if (o[n]++ >= 9) o[n] = 0;
 109   4                      show[n] = nbr[o[n]];
 110   4                  }
 111   3                  delay = 0;
 112   3                  delayms = 0;
 113   3              }
 114   2      
 115   2              if (S1 == 0) {                //S1°´ÏÂ
C51 COMPILER V9.59.0.0   MAIN                                                              11/07/2021 13:25:25 PAGE 3   

 116   3                  beep(50);
 117   3                  n++;                //ÊäÈëÏÂÒ»Î»
 118   3                  while (S1 == 0) {
 119   4                      feed_dog();
 120   4                      if (S1_ms >= 1000 && !bak) {                //³¤°´ÍË»Ø±à¼­
 121   5                          beep(50);
 122   5                          n = 0;
 123   5                          wink = 8 >> n;
 124   5                          show[0] = nbr[o[0]];
 125   5                          show[1] = nbr[o[1]];
 126   5                          show[2] = nbr[o[2]];
 127   5                          show[3] = nbr[o[3]];
 128   5                          bak = 1;
 129   5                      }
 130   4                  }
 131   3      
 132   3                  if (bak) {
 133   4                      bak = 0;
 134   4                      continue;
 135   4                  }
 136   3      
 137   3                  if (n >= 4) {                //¸öÎ»ÊäÈëÍê³É
 138   4                      wink = 0;
 139   4                      return o[0] * 1000 + o[1] * 100 + o[2] * 10 + o[3];
 140   4      
 141   4                  }
 142   3              }
 143   2          }
 144   1      //    return 0;
 145   1      }
 146          
 147          
 148          /******************** IOÅäÖÃº¯Êý **************************/
 149          void  GPIO_config(void)
 150          {
 151   1        GPIO_InitTypeDef  GPIO_InitStructure;   //½á¹¹¶¨Òå
 152   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;   //Ö¸¶¨Òª³õÊ¼»¯µÄIO, GPIO_Pin_0 ~ GPIO_Pin_7, »ò²Ù×÷
 153   1        GPIO_InitStructure.Mode = GPIO_OUT_PP;    //Ö¸¶¨IOµÄÊäÈë»òÊä³ö·½Ê½,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
 154   1        GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);  //³õÊ¼»¯
 155   1      }
 156          
 157          
 158          
 159          /******************** Ö÷º¯Êý **************************/
 160          void main(void)
 161          {
 162   1         u8 i = 0;
 163   1          Beep = 1;
 164   1          WDT_CONTR = 0x27;           //³õÊ¼»¯¿´ÃÅ¹·
 165   1          P1M0 = 0x0F; P1M1 = 0x00;   //P1.0~P1.3Ç¿ÍÆÍì
 166   1          P2M0 = 0xFF; P2M1 = 0x00;   //P2.0~P2.7Ç¿ÍÆÍì
 167   1          //ÉÏµç1ÃëÊýÂë¹ÜÈ«ÁÁ ·äÃùÆ÷Ïì
 168   1          test = 1;
 169   1          GPIO_config();
 170   1          InitTimer0();
 171   1          delayms = 1000; delay = 1;
 172   1          while (delay);
 173   1          test = 0;
 174   1      
 175   1          show[0] = nbr[0];
 176   1          show[1] = nbr[0];
C51 COMPILER V9.59.0.0   MAIN                                                              11/07/2021 13:25:25 PAGE 4   

 177   1          show[2] = nbr[0];
 178   1          show[3] = nbr[0];
 179   1        while(1)
 180   1        {
 181   2      relay = 1;
 182   2              pause = 0;
 183   2              do {        //Ê±¼äÉè¶¨
 184   3                  time = set_time();
 185   3              } while (!time);
 186   2              time -= 1;
 187   2              start = 1;
 188   2              relay = 0;
 189   2              while (start) {
 190   3                  feed_dog();
 191   3                  if (S1 == 0) {      //S1°´ÏÂ·äÃùÆ÷Ïì1ÏÂ
 192   4                      beep(50);
 193   4                      while (S1 == 0) {
 194   5                          feed_dog();
 195   5                      }
 196   4                  }
 197   3      
 198   3                  if (S2 == 0) {      //S2°´ÏÂÔÝÍ£µ¹¼ÆÊ±
 199   4                      beep(50);
 200   4                      pause = !pause;
 201   4                      relay = pause;
 202   4                      while (S2 == 0) {
 203   5                          feed_dog();
 204   5                          if (pause && S2_ms >= 3000) {       //³¤°´3Ãë¸´Î»
 205   6                              _nop_(); _nop_(); _nop_(); _nop_();
 206   6                              reset();
 207   6                              _nop_(); _nop_(); _nop_(); _nop_();
 208   6                          }
 209   5                      }
 210   4                  }
 211   3      
 212   3              }
 213   2              //µ¹¼ÆÊ±½áÊø
 214   2              show[0] = 0x79;     //E
 215   2              show[1] = 0x54;     //n
 216   2              show[2] = 0x5E;     //d
 217   2              show[3] = 0x00;
 218   2              for (i = 0; i < 6; i++) {       //·äÃùÆ÷Ïì6ÏÂ
 219   3                  delayms = 500; delay = 1; while (delay);
 220   3                  beep(500);
 221   3                  while (!Beep);
 222   3                  feed_dog();
 223   3              }
 224   2      
 225   2              while (1) {
 226   3                  feed_dog();
 227   3                  if (S1 == 0 || S2 == 0) {
 228   4                      beep(50);
 229   4                      while (S1 == 0 || S2 == 0) {
 230   5                          feed_dog();
 231   5                      }
 232   4                      break;
 233   4                  }
 234   3              }
 235   2        }
 236   1      }
 237          
 238          void Timer0Interrupt() interrupt 1{         //12Mhz 1mS¶¨Ê±Æ÷ÖÐ¶Ï
C51 COMPILER V9.59.0.0   MAIN                                                              11/07/2021 13:25:25 PAGE 5   

 239   1          static u8 seg = 0;  //µ±Ç°ÕýÔÚÉ¨ÃèµÄÊýÂë¹Ü¶ÎÂë 4Î»ÊýÂë¹Ü ·¶Î§:0~3
 240   1          static u8 ms1 = 0;
 241   1          static u16 ms = 0, ms2 = 0;
 242   1          TH0 = 0xFC;
 243   1          TL0 = 0x18;
 244   1          if (delay && !--delayms) {    //ÑÓÊ±ÈÎÒâºÁÃë
 245   2              delay = 0;
 246   2          }
 247   1          //ÊýÂë¹Ü¶¯Ì¬É¨Ãè´¦Àí
 248   1          P1 |= 0xF;          //ÏûÓ°
 249   1          P2 = test ? 0xFF : (wink & (1 << (3 ^ seg)) && !hz10 ? 0 : show[seg]);      //¶ÎÂë
 250   1          P1 &= ~(1 << seg);   //Î»Âë
 251   1          if (++seg >= 4) seg = 0;
 252   1      
 253   1          if (test) {     //²âÊÔÄ£Ê½
 254   2              S1 = 1; S2 = 1;
 255   2              P3_2 = 0;
 256   2              return;
 257   2          }
 258   1      
 259   1          //·äÃùÆ÷´¦Àí
 260   1          P3_2 = Beep;
 261   1          if (!Beep && !--beep_ms) {
 262   2              Beep = 1;
 263   2          }
 264   1          if (++ms1 >= 50) {
 265   2              ms1 = 0;
 266   2              hz10 = !hz10;
 267   2          }
 268   1      
 269   1          //°´¼ü´¦Àí
 270   1          if (P3_0 == 0) {
 271   2              if (S1_ms != 0xFFFF) S1_ms++;
 272   2          }
 273   1          else {
 274   2              S1_ms = 0;
 275   2          }
 276   1      
 277   1          if (P3_1 == 0) {
 278   2              if (S2_ms != 0xFFFF) S2_ms++;
 279   2          }
 280   1          else {
 281   2              S2_ms = 0;
 282   2          }
 283   1      
 284   1          S1 = !(S1_ms >= KEY_TIME);
 285   1          S2 = !(S2_ms >= KEY_TIME);
 286   1          //¼ÌµçÆ÷´¦Àí
 287   1          if (++ms2 >= 1000) {    //¼ÌµçÆ÷1ÃëÖ»ÄÜ½øÐÐ1´ÎÎüºÏ»òÊÍ·Å£¬·ÀÖ¹Æµ·±¿ª¹Øµ¼ÖÂÉè±¸Ëð»µ
 288   2              ms2 = 0;
 289   2              P3_3 = relay;
 290   2          }
 291   1          //Ê±¼äµ¹¼ÆÊ±´¦Àí
 292   1          if (start) {
 293   2              if (pause) {
 294   3                  wink = 0xF;
 295   3              }
 296   2              else {
 297   3                  wink = 0;
 298   3                  if (++ms >= 1000) {
 299   4                      ms = 0;
 300   4                      show[0] = nbr[time / 1000 % 10];
C51 COMPILER V9.59.0.0   MAIN                                                              11/07/2021 13:25:25 PAGE 6   

 301   4                      show[1] = nbr[time / 100 % 10];
 302   4                      show[2] = nbr[time / 10 % 10];
 303   4                      show[3] = nbr[time % 10];
 304   4      
 305   4                      if (!time--) {      //µ¹¼ÆÊ±½áÊø
 306   5                          start = 0;
 307   5                          relay = 1;
 308   5                      }
 309   4                  }
 310   3              }
 311   2      
 312   2          }
 313   1      
 314   1      
 315   1      }
 316          
 317          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1113    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
