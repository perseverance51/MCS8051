C51 COMPILER V9.60.0.0   MAIN                                                              01/21/2022 20:30:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*********************************************************************************
   2          接线方式请看main.h说明
   3            二片74HC595 + 一个8*8点阵(1088AS共阴)
   4            实现文字静态显示+移动显示(左移/右移/上移/下移)
   5            代码精简,方便理解
   6          **********************************************************************************/
   7          #include "main.h"
   8          
   9          //定义变量
  10          uchar temp = 0xfe;
  11          
  12          /*取模说明:
  13          菜单选项:
  14          "点阵格式" : 根据你的点阵是共阴还是共阳, 我的是共阴, 所以选择的是阴码
  15          "取模走向" : 根据你的需求, 选择逆向或顺向, 我这里选择的是逆向
  16          "取模方式" : 请看下面示例说明, 根据移动方向选择
  17          "每行显示数据" : 点阵=8, 索引=8
  18          "液晶面板仿真" : 像素大小=8
  19          "输出数制" : 选择"十六进制数"
  20          "输出选项" : 选择"输出精简格式"和"输出紧凑格式"
  21          "自定义格式" : 选择"C51格式", 其它默认
  22          
  23          主界面选项:
  24          字体: 幼圆
  25          字宽: 8   字高: 8
  26          点阵宽: 8 点阵高: 8
  27          */
  28          
  29          //动态显示数组
  30          uchar code Display_word1[64] = {      //数组个数(这里的40代表有40个十六进制,因为是8*8点阵,所以每个字有8个十六
             -进制)
  31          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //空白(前面放一个空白屏,实现移动出字效果)
  32          //0x10,0x38,0x54,0x10,0x10,0x10,0x10,0x10,  //箭头
  33          
  34          //逆向+逐列式或列行式 (左移/右移)
  35          0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,  //"一",0
  36          0x80,0x80,0x80,0xFE,0x90,0x90,0x80,0x80,  //"上",1
  37          0x00,0x40,0x44,0x44,0x44,0x44,0x40,0x00,  //"二",2
  38          0x00,0x02,0x02,0xFE,0x0A,0x12,0x02,0x00,  //"下",3
  39          0x18,0x3C,0x7E,0xE7,0xC3,0x81,0x0,0x0,    // <<
  40          0x1C,0x38,0x70,0xE0,0xE0,0x70,0x38,0x1C,  //  向下
  41          //逆向+行列式或逐行式 (上移/下移)
  42          /*0x00,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,  //"一",0
  43          0x00,0x08,0x08,0x08,0x38,0x08,0x08,0xFF,  //"上",1
  44          0x00,0x00,0x3C,0x00,0x00,0x00,0x7E,0x00,  //"二",2
  45          0x00,0x7E,0x08,0x18,0x28,0x08,0x08,0x08,  //"下",3
  46          */
  47          
  48          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //空白(最后放一个空白屏,以免出现乱码)
  49          };
  50          
  51          //静态显示数组(第1个参数为几个字,第2个参数为每字多少字节)
  52          uchar Display_word2[3][8] = {
  53          0x0C,0x1E,0x3E,0x7C,0x7C,0x3E,0x1E,0x0C,  //心
  54          0x10,0x38,0x54,0x10,0x10,0x10,0x10,0x10,  //箭头
C51 COMPILER V9.60.0.0   MAIN                                                              01/21/2022 20:30:40 PAGE 2   

  55          0x0C,0x1E,0x3E,0x7C,0x7C,0x3E,0x1E,0x0C,  //心
  56          };
  57          
  58          //****************************************************
  59          //主函数
  60          //****************************************************
  61          void main()
  62          {
  63   1        uint i;
  64   1        uchar j,k;
  65   1        while(1)
  66   1        {   
  67   2          ///////////////////////////////////////////////////////////////////////////
  68   2          //静态显示的代码区域
  69   2      
  70   2          for(j = 0 ; j < 3 ; j++) {    //共需显示3个字
  71   3            for(i = 0 ; i < 1000 ; i++) {   //静态显示时间
  72   4              temp = 0x7f;
  73   4              for(k = 0 ; k < 8 ; k++) {    //显示1-8列(8为显示8列)如果改成4则有4列显示,另4列黑屏
  74   5                Send_Data(Display_word2[j][k]);
  75   5              }
  76   4            }
  77   3          }
  78   2      
  79   2          ///////////////////////////////////////////////////////////////////////////   
  80   2          //移动方式(想要不同的移动方式,就按以下说明修改两处)
  81   2      
  82   2          for(j = 0 ; j < 40 ; j++) //左移(逐列式)/上移(逐行式1)
  83   2          //for(j = 39 ; j-1 > 0 ; j--) //右移(逐列式)/下移(逐行式2)
  84   2      
  85   2          for(j = 0 ; j < 56 ; j++) {       //要显示的字数(每个字8位,这里是显示一屏空白+6个字,所以是8+6*8=56)
  86   3            for(i = 0 ; i < 50 ; i++) {     //控制移动的速度（数字越小移动速度越快，越大越慢）
  87   4              temp = 0x7f;
  88   4      
  89   4              //移动方式(想要不同的移动方式,就按以下说明修改)
  90   4              for(k = 0 ; k < 8 ; k++) //左移(逐列式)/右移(逐列式1)
  91   4              //for(k = 8 ; k-1 > 0 ; k--) //上移(逐行式)/下移(逐行式2) 
  92   4              
  93   4                Send_Data(Display_word1[j+k]);  //(每个字取8次数组, 不要修改)
  94   4              }
  95   3            }
  96   2          }
  97   1        }         
  98          
  99          
 100          //****************************************************
 101          //发送数据(不需要修改)
 102          //****************************************************
 103          void Send_Data(uchar dat)
 104          {
 105   1        Send_Byte(temp);  //列选择
 106   1        Send_Byte(dat);   //数据
 107   1        LEDARRAY_LAT = 1; //锁存数据
 108   1        _nop_();
 109   1        LEDARRAY_LAT = 0;
 110   1        _nop_();
 111   1        temp = (temp>>1)|0x80;
 112   1      }
 113          
 114          //****************************************************
 115          //发送一个字节数据(不需要修改)
 116          //****************************************************
C51 COMPILER V9.60.0.0   MAIN                                                              01/21/2022 20:30:40 PAGE 3   

 117          void Send_Byte(uchar dat)
 118          {
 119   1        uchar i;
 120   1        LEDARRAY_CLK = 0;
 121   1        _nop_();  
 122   1        LEDARRAY_LAT = 0;
 123   1        _nop_();
 124   1      
 125   1        for( i = 0 ; i < 8 ; i++ )
 126   1        {
 127   2          if( dat&0x01 ) {
 128   3            LEDARRAY_DI = 1;  
 129   3          } else {
 130   3            LEDARRAY_DI = 0;
 131   3          }   
 132   2          LEDARRAY_CLK = 1;       //上升沿发送数据
 133   2          LEDARRAY_CLK = 0;
 134   2          dat >>= 1;      
 135   2        }   
 136   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
