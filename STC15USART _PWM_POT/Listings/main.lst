C51 COMPILER V9.60.0.0   MAIN                                                              02/09/2022 11:08:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\STC15USART _PWM) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          /*************  功能说明  **************
   3          
   4          双串口全双工中断方式收发通讯程序。
   5          注意：
   6          通过PC向MCU发送数据, MCU收到后通过串口把收到的数据原样返回.
   7          
   8          ******************************************/
   9          #include  "config.h"
  10          #include "stdio.h"
  11          #include "USART.h"
  12          #include "PWM.h"
  13          #include "ADC.h"
  14          
  15          //  #define Cal_MODE  0  //每次测量只读1次ADC. 分辨率0.01V
  16            #define Cal_MODE  1 //每次测量连续读16次ADC 再平均计算. 分辨率0.01V
  17          //typedef   unsigned char u8;
  18          //typedef   unsigned int  u16;
  19          //typedef   unsigned long u32;
  20          
  21          volatile bit  B_4ms;      //1ms标志
  22          
  23          volatile u16  msecond;    //计时
  24          u16 Bandgap;  //
  25          
  26          //void  delay_ms(unsigned int ms)
  27          //{
  28          //     unsigned int i;
  29          //   do{
  30          //        i = MAIN_Fosc / 13000;
  31          //      while(--i)  ;   //14T per loop
  32          //     }while(--ms);
  33          //}
  34          /********************** 模拟量映射函数 ************************/
  35          long map( long x,  long in_min,  long in_max,  long out_min,  long out_max)
  36          {
  37   1        return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  38   1      }
  39          
  40          //========================================================================
  41          // 函数: void main(void)
  42          // 描述: 主函数。
  43          // 参数: none.
  44          // 返回: none.
  45          // 版本: VER1.0
  46          // 日期: 2014-11-28
  47          // 备注: 
  48          //========================================================================
  49          void main(void)
  50          {
  51   1            u8 i;
  52   1        int Duty ;
  53   1        int j;
  54   1        
C51 COMPILER V9.60.0.0   MAIN                                                              02/09/2022 11:08:54 PAGE 2   

  55   1            PCA_Init(); //PCA初始化
  56   1      //  P0M1 = 0; P0M0 = 0; //设置为准双向口
  57   1      //  P1M1 = 0; P1M0 = 0; //设置为准双向口
  58   1        P1M1 = 0x00; P1M0 = 0x00; 
  59   1        P1M1 |= (1<<3);   // 把ADC口设置为高阻输入
  60   1        P1M0 &= ~(1<<3);
  61   1        P1ASF = (1<<3);   //P1.3做ADC
  62   1        ADC_CONTR = 0xE0; //90T, ADC power on
  63   1      //  P2M1 = 0; P2M0 = 0; //设置为准双向口
  64   1        P2M1 &= ~(0xe0);  //P2.7 P2.6 P2.5 设置为推挽输出
  65   1        P2M0 |=  (0xe0);
  66   1        P3M1 = 0; P3M0 = 0; //设置为准双向口
  67   1      //  P4M1 = 0; P4M0 = 0; //设置为准双向口
  68   1      //  P5M1 = 0; P5M0 = 0; //设置为准双向口
  69   1      //  P6M1 = 0; P6M0 = 0; //设置为准双向口
  70   1      //  P7M1 = 0; P7M0 = 0; //设置为准双向口
  71   1          //  S1_USE_P30P31();
  72   1        Timer0Init();//定时器0初始化
  73   1       InitSerialPort();    //初始化串口,波特率9600，8bit数据位，1停止位，无校验
  74   1        EA = 1; //允许总中断
  75   1      
  76   1      //  PrintString1("STC15F2K60S2 UART1 Test Prgramme!\r\n");  //SUART1发送一个字符串
  77   1      
  78   1        while (1)
  79   1        {
  80   2          P10 = !P10;
  81   2          if(pwm0 >= PWM_HIGH_MAX)  pwm0 = PWM_HIGH_MAX;
  82   2          
  83   2      //    if(pwm1 >= PWM_HIGH_MAX)  pwm1 = PWM_HIGH_MAX;
  84   2      //    PWMn_Update(PCA1,pwm1);
  85   2      
  86   2      //    if(pwm2 >= PWM_HIGH_MAX)  pwm2 = PWM_HIGH_MAX;
  87   2      //    PWMn_Update(PCA2,pwm2);
  88   2        if(B_4ms) //5ms到达标志位
  89   2          {
  90   3            B_4ms = 0;
  91   3            if(++msecond >= 250)  //计数到达1S
  92   3            {
  93   4              msecond = 0;
  94   4            #if (Cal_MODE == 0)
                    //=================== 只读1次ADC, 10bit ADC. 分辨率0.01V ===============================
                      P1ASF = 0;
                      Get_ADC10bitResult(1);  //改变P1ASF后先读一次并丢弃结果, 让内部的采样电容的电压等于输入值.
                      Bandgap = Get_ADC10bitResult(1);  //读P1.1的电压为基准ADC, P1ASF=0, 0通道的电压值
                
                      P1ASF = 1<<3;
                      j = Get_ADC10bitResult(3);  //读外部电压ADC
                    //  j = (u16)((u32)j * 507 / Bandgap);  //计算外部电压, Bandgap为5.07V, 测电压分辨率0.01V
                        printf("\t ADC =%d \t\n",j);  
                      pwm0 = (u16)map(j, 0, 1023,80, 5920);//将映射的值赋值给pwm0
                       
                      printf("\t pwm0 =%u \t\n",pwm0 );
                      #endif
 108   4            //==========================================================================
 109   4      
 110   4            //===== 连续读16次ADC 再平均计算. 分辨率0.01V =========
 111   4            #if (Cal_MODE == 1)
 112   4              P1ASF = 0;
 113   4              Get_ADC10bitResult(1);  //改变P1ASF后先读一次并丢弃结果, 让内部的采样电容的电压等于输入值.
 114   4              for(j=0, i=0; i<16; i++)
 115   4              {
 116   5                j += Get_ADC10bitResult(1); //读P11内部基准ADC, P1ASF=0, 读1通道
C51 COMPILER V9.60.0.0   MAIN                                                              02/09/2022 11:08:54 PAGE 3   

 117   5              }
 118   4              Bandgap = j >> 4; //16次平均
 119   4              P1ASF = (1<<3);   //P1.3做ADC
 120   4              for(j=0, i=0; i<16; i++)
 121   4              {
 122   5                j += Get_ADC10bitResult(3); //读外部电压ADC
 123   5              }
 124   4              j = j >> 4; //16次平均
 125   4              pwm0= (u16)map(j, 0, 1023, 80, 5920);//将映射的值赋值给pwm0
 126   4              //pwm0 = j;
 127   4                printf("\t pwm0 =%d \t\n",j); 
 128   4              //j = (u16)((u32)j * 507 / Bandgap);  //计算外部电压, Bandgap为5.07V, 测电压分辨率0.01V
 129   4            #endif    
 130   4            //==========================================================================
 131   4        
 132   4            Duty=map(pwm0, 80, 5920, 0, 100);//将pwm0转换为占空比串口输出
 133   4            PWMn_Update(PCA1,pwm0);//PCA0--P25,PCA2--P26
 134   4            printf("占空比:%u%% \r\n",Duty);
 135   4            }
 136   3            }
 137   2      
 138   2        //  printf("pwm0:%u \t pwm1:%u \t pwm2:%u\r\n",pwm0,pwm1,pwm2); //SUART1发送一个字符串
 139   2        }
 140   1      }
 141          
 142          /********************** Timer0 1ms中断函数 ************************/
 143          void timer0 (void) interrupt 1
 144          {
 145   1        B_4ms = 1;    //1ms标志
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    446    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
