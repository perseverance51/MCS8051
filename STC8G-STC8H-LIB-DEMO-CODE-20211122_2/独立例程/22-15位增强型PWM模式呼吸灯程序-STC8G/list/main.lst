C51 COMPILER V9.60.0.0   MAIN                                                              02/01/2022 12:47:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\list\main.lst) 
                    -TABS(2) OBJECT(.\list\main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "config.h"
  14          #include  "GPIO.h"
  15          #include  "PWM15bit.h"
  16          #include  "delay.h"
  17          
  18          /*************   功能说明   ***************
  19          
  20          本例程基于STC8G2K64进行编写测试，STC8G系列带15位增强型PWM芯片可通用参考.
  21          
  22          输出4路PWM信号：
  23          PWM00,PWM01  输出"呼吸灯"效果PWM.
  24          PWM02  循环输出1秒钟PWM，1秒钟高电平，1秒钟低电平.
  25          PWM03  固定PWM.
  26          
  27          下载时, 选择时钟 24MHz (用户可在"config.h"修改频率).
  28          
  29          ******************************************/
  30          
  31          /*************  本地常量声明  **************/
  32          
  33          
  34          /*************  本地变量声明  **************/
  35          
  36          u16 pwm0,pwm1,pwm2;
  37          bit B_PWM0_Dir,B_PWM1_Dir;  //方向, 0为+, 1为-.
  38          
  39          /*************  本地函数声明  **************/
  40          
  41          
  42          /*************  外部函数和变量声明 *****************/
  43          
  44          
  45          /******************** IO口配置 ********************/
  46          void  GPIO_config(void)
  47          {
  48   1        GPIO_InitTypeDef  GPIO_InitStructure;       //结构定义
  49   1      
  50   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;     //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  51   1        GPIO_InitStructure.Mode = GPIO_PullUp;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO
             -_OUT_PP
  52   1        GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //初始化
  53   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              02/01/2022 12:47:49 PAGE 2   

  54          
  55          /******************** PWM15配置 ********************/
  56          void  PWM15_config(void)
  57          {
  58   1        PWM15_InitTypeDef   PWM15_InitStructure;
  59   1      
  60   1        PWM15_InitStructure.PWM_Enable    = ENABLE;   //PWM使能,  ENABLE, DISABLE
  61   1        PWM15_InitStructure.PWM_Period    = 0x1000;   //PWM周期,  0~0x7fff
  62   1        PWM15_InitStructure.PWM_Clock_Sel = PWMn_CLK_SYS;   //时钟源选择,  PWMn_CLK_SYS, PWMn_CLK_TM2
  63   1        PWM15_InitStructure.PWM_Clock_PS  = 0;        //系统时钟分频参数(PS+1分频),  0~15
  64   1        PWM15_InitStructure.PWM_Counter   = ENABLE;   //计数器使能,  ENABLE, DISABLE
  65   1        PWM15_Init(PWM0,&PWM15_InitStructure);
  66   1        
  67   1        PWM15Duty(PWM00,0x000,0x200);   //PWM_ID, 输出低电平位置, 输出高电平位置
  68   1        PWM15Duty(PWM01,0x000,0x400);   //PWM_ID, 输出低电平位置, 输出高电平位置
  69   1        PWM15Duty(PWM02,0x000,0x800);   //PWM_ID, 输出低电平位置, 输出高电平位置
  70   1        PWM15Duty(PWM03,0x200,0xc00);   //PWM_ID, 输出低电平位置, 输出高电平位置
  71   1        PWMChannelCtrl(PWM00,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  72   1        PWMChannelCtrl(PWM01,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  73   1        PWMChannelCtrl(PWM02,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  74   1        PWMChannelCtrl(PWM03,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  75   1      }
  76          
  77          /******************** task A **************************/
  78          void main(void)
  79          {
  80   1        GPIO_config();
  81   1        PWM15_config();
  82   1        pwm0 = 0;
  83   1        pwm1 = 0;
  84   1        pwm2 = 0;
  85   1        B_PWM0_Dir = 0;
  86   1        B_PWM1_Dir = 0;
  87   1      
  88   1      //  EA = 1;
  89   1        
  90   1        while (1)
  91   1        {
  92   2          delay_ms(1);
  93   2      
  94   2          if(B_PWM0_Dir)
  95   2          {
  96   3              if(--pwm0 <= 0x100) B_PWM0_Dir = 0; //PWM00
  97   3          }
  98   2          else  if(++pwm0 >= 0xf00) B_PWM0_Dir = 1; //PWM00
  99   2          PWM15Duty(PWM00,0,pwm0);
 100   2      
 101   2          if(B_PWM1_Dir)
 102   2          {
 103   3              if(--pwm1 <= 0x100)   B_PWM1_Dir = 0; //PWM01
 104   3          }
 105   2          else  if(++pwm1 >= 0xf00) B_PWM1_Dir = 1; //PWM01
 106   2          PWM15Duty(PWM01,0,pwm1);
 107   2      
 108   2          if(pwm2 >= 3000)
 109   2          {
 110   3            pwm2 = 0;
 111   3          }
C51 COMPILER V9.60.0.0   MAIN                                                              02/01/2022 12:47:49 PAGE 3   

 112   2          else  if(pwm2 >= 2000)
 113   2          {
 114   3              PWMLevelSet(PWM02,ENABLE,DISABLE);  //PWM_ID, 强制输出低电平, 强制输出高电平
 115   3          }
 116   2          else  if(pwm2 >= 1000)
 117   2          {
 118   3              PWMLevelSet(PWM02,DISABLE,ENABLE);  //PWM_ID, 强制输出低电平, 强制输出高电平
 119   3          }
 120   2          else
 121   2          {
 122   3              PWMLevelSet(PWM02,DISABLE,DISABLE); //PWM_ID, 强制输出低电平, 强制输出高电平
 123   3          }
 124   2          pwm2++;
 125   2        }
 126   1      }
 127          
 128          
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
