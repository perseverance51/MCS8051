C51 COMPILER V9.59.0.0   STC8G_PWM15BIT_ISR                                                08/25/2021 13:28:43 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE STC8G_PWM15BIT_ISR
OBJECT MODULE PLACED IN .\list\STC8G_PWM15bit_Isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Driver\isr\STC8G_PWM15bit_Isr.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE I
                    -NCDIR(..\Driver\inc;..\User;..\App\inc) DEBUG PRINT(.\list\STC8G_PWM15bit_Isr.lst) TABS(2) OBJECT(.\list\STC8G_PWM15bit_
                    -Isr.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "STC8G_PWM15bit.h"
  14          
  15          //========================================================================
  16          // º¯Êý: PWM0_ISR_Handler
  17          // ÃèÊö: 15Î»ÔöÇ¿ÐÍPWM0ÖÐ¶Ïº¯Êý.
  18          // ²ÎÊý: none.
  19          // ·µ»Ø: none.
  20          // °æ±¾: V1.0, 2020-09-23
  21          //========================================================================
  22          void  PWM0_ISR_Handler (void) interrupt PWM0_VECTOR
  23          {
  24   1        char store;
  25   1        store = P_SW2;
  26   1        P_SW2 |= 0x80;
  27   1      
  28   1        if(PWMCFG01 & 0x08)   //PWM0¼ÆÊýÆ÷ÖÐ¶Ï
  29   1        {
  30   2          PWMCFG01 &= ~0x08;    //ÇåPWM0¼ÆÊýÆ÷ÖÐ¶Ï±êÖ¾
  31   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
  32   2        }
  33   1        if(PWM0IF)    //PWM0Æ¥ÅäÖÐ¶Ï
  34   1        {
  35   2          PWM0IF = 0;
  36   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
  37   2        }
  38   1        P_SW2 = store;
  39   1      }
  40          
  41          //========================================================================
  42          // º¯Êý: PWM1_ISR_Handler
  43          // ÃèÊö: 15Î»ÔöÇ¿ÐÍPWM1ÖÐ¶Ïº¯Êý.
  44          // ²ÎÊý: none.
  45          // ·µ»Ø: none.
  46          // °æ±¾: V1.0, 2020-09-23
  47          //========================================================================
  48          void  PWM1_ISR_Handler (void) interrupt PWM1_VECTOR
  49          {
  50   1        char store;
  51   1        store = P_SW2;
  52   1        P_SW2 |= 0x80;
  53   1      
C51 COMPILER V9.59.0.0   STC8G_PWM15BIT_ISR                                                08/25/2021 13:28:43 PAGE 2   

  54   1        if(PWMCFG01 & 0x80)   //PWM1¼ÆÊýÆ÷ÖÐ¶Ï
  55   1        {
  56   2          PWMCFG01 &= ~0x80;    //ÇåPWM1¼ÆÊýÆ÷ÖÐ¶Ï±êÖ¾
  57   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
  58   2        }
  59   1        if(PWM1IF)    //PWM1Æ¥ÅäÖÐ¶Ï
  60   1        {
  61   2          PWM1IF = 0;
  62   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
  63   2        }
  64   1        P_SW2 = store;
  65   1      }
  66          
  67          //========================================================================
  68          // º¯Êý: PWM2_ISR_Handler
  69          // ÃèÊö: 15Î»ÔöÇ¿ÐÍPWM2ÖÐ¶Ïº¯Êý.
  70          // ²ÎÊý: none.
  71          // ·µ»Ø: none.
  72          // °æ±¾: V1.0, 2020-09-23
  73          //========================================================================
  74          void  PWM2_ISR_Handler (void) interrupt PWM2_VECTOR
  75          {
  76   1        char store;
  77   1        store = P_SW2;
  78   1        P_SW2 |= 0x80;
  79   1      
  80   1        if(PWMCFG23 & 0x08)   //PWM2¼ÆÊýÆ÷ÖÐ¶Ï
  81   1        {
  82   2          PWMCFG23 &= ~0x08;    //ÇåPWM2¼ÆÊýÆ÷ÖÐ¶Ï±êÖ¾
  83   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
  84   2        }
  85   1        if(PWM2IF)    //PWM2Æ¥ÅäÖÐ¶Ï
  86   1        {
  87   2          PWM2IF = 0;
  88   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
  89   2        }
  90   1        P_SW2 = store;
  91   1      }
  92          
  93          //========================================================================
  94          // º¯Êý: PWM3_ISR_Handler
  95          // ÃèÊö: 15Î»ÔöÇ¿ÐÍPWM3ÖÐ¶Ïº¯Êý.
  96          // ²ÎÊý: none.
  97          // ·µ»Ø: none.
  98          // °æ±¾: V1.0, 2020-09-23
  99          //========================================================================
 100          void  PWM3_ISR_Handler (void) interrupt PWM3_VECTOR
 101          {
 102   1        char store;
 103   1        store = P_SW2;
 104   1        P_SW2 |= 0x80;
 105   1      
 106   1        if(PWMCFG23 & 0x80)   //PWM3¼ÆÊýÆ÷ÖÐ¶Ï
 107   1        {
 108   2          PWMCFG23 &= ~0x80;    //ÇåPWM3¼ÆÊýÆ÷ÖÐ¶Ï±êÖ¾
 109   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
 110   2        }
 111   1        if(PWM3IF)    //PWM3Æ¥ÅäÖÐ¶Ï
 112   1        {
 113   2          PWM3IF = 0;
 114   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
 115   2        }
C51 COMPILER V9.59.0.0   STC8G_PWM15BIT_ISR                                                08/25/2021 13:28:43 PAGE 3   

 116   1        P_SW2 = store;
 117   1      }
 118          
 119          //========================================================================
 120          // º¯Êý: PWM4_ISR_Handler
 121          // ÃèÊö: 15Î»ÔöÇ¿ÐÍPWM4ÖÐ¶Ïº¯Êý.
 122          // ²ÎÊý: none.
 123          // ·µ»Ø: none.
 124          // °æ±¾: V1.0, 2020-09-23
 125          //========================================================================
 126          void  PWM4_ISR_Handler (void) interrupt PWM4_VECTOR
 127          {
 128   1        char store;
 129   1        store = P_SW2;
 130   1        P_SW2 |= 0x80;
 131   1      
 132   1        if(PWMCFG45 & 0x08)   //PWM4¼ÆÊýÆ÷ÖÐ¶Ï
 133   1        {
 134   2          PWMCFG45 &= ~0x08;    //ÇåPWM4¼ÆÊýÆ÷ÖÐ¶Ï±êÖ¾
 135   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
 136   2        }
 137   1        if(PWM4IF)    //PWM4Æ¥ÅäÖÐ¶Ï
 138   1        {
 139   2          PWM4IF = 0;
 140   2          // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
 141   2        }
 142   1        P_SW2 = store;
 143   1      }
 144          
 145          //========================================================================
 146          // º¯Êý: PWM5_ISR_Handler
 147          // ÃèÊö: 15Î»ÔöÇ¿ÐÍPWM5ÖÐ¶Ïº¯Êý.
 148          // ²ÎÊý: none.
 149          // ·µ»Ø: none.
 150          // °æ±¾: V1.0, 2020-09-23
 151          //========================================================================
 152          //void  PWM5_ISR_Handler (void) interrupt PWM5_VECTOR //ÖÐ¶ÏÏòÁ¿ºÅ³¬¹ý31£¬¿É½èÖúÆäËüÖÐ¶ÏºÅÌø×ª£¬·½·¨Ïê¼û¹æ¸
             -ñÊé½éÉÜ
 153          //{
 154          //  if(PWMCFG45 & 0x80)   //PWM5¼ÆÊýÆ÷ÖÐ¶Ï
 155          //  {
 156          //    PWMCFG45 &= ~0x80;    //ÇåPWM5¼ÆÊýÆ÷ÖÐ¶Ï±êÖ¾
 157          //    // TODO: ÔÚ´Ë´¦Ìí¼ÓÓÃ»§´úÂë
 158          //  }
 159          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    250    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
