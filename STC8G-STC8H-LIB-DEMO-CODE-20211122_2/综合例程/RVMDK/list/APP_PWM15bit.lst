C51 COMPILER V9.59.0.0   APP_PWM15BIT                                                      10/19/2021 09:01:33 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE APP_PWM15BIT
OBJECT MODULE PLACED IN .\list\APP_PWM15bit.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\APP_PWM15bit.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\
                    -Driver\inc;..\User;..\App\inc) DEBUG PRINT(.\list\APP_PWM15bit.lst) TABS(2) OBJECT(.\list\APP_PWM15bit.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "APP.h"
  14          #include  "STC8G_H_GPIO.h"
  15          #include  "STC8G_PWM15bit.h"
  16          
  17          /*************   功能说明   ***************
  18          
  19          本例程基于STC8G2K64进行编写测试，STC8G系列带15位增强型PWM芯片可通用参考.
  20          
  21          输出4路PWM信号：
  22          PWM00,PWM01  输出"呼吸灯"效果PWM.
  23          PWM02  循环输出1秒钟PWM，1秒钟高电平，1秒钟低电平.
  24          PWM03  固定PWM.
  25          
  26          下载时, 选择时钟 24MHz (用户可在"config.h"修改频率).
  27          
  28          ******************************************/
  29          
  30          
  31          //========================================================================
  32          //                               本地常量声明 
  33          //========================================================================
  34          
  35          
  36          //========================================================================
  37          //                               本地变量声明
  38          //========================================================================
  39          
  40          u16 pwm0,pwm1,pwm2;
  41          bit B_PWM0_Dir,B_PWM1_Dir;  //方向, 0为+, 1为-.
  42          
  43          //========================================================================
  44          //                               本地函数声明
  45          //========================================================================
  46          
  47          
  48          //========================================================================
  49          //                            外部函数和变量声明
  50          //========================================================================
  51          
  52          
  53          //========================================================================
  54          // 函数: PWM15bit_init
C51 COMPILER V9.59.0.0   APP_PWM15BIT                                                      10/19/2021 09:01:33 PAGE 2   

  55          // 描述: 用户初始化程序.
  56          // 参数: None.
  57          // 返回: None.
  58          // 版本: V1.0, 2020-09-28
  59          //========================================================================
  60          void PWM15bit_init(void)
  61          {
  62   1        GPIO_InitTypeDef  GPIO_InitStructure;       //结构定义
  63   1        PWM15_InitTypeDef   PWM15_InitStructure;
  64   1      
  65   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;     //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  66   1        GPIO_InitStructure.Mode = GPIO_PullUp;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO
             -_OUT_PP
  67   1        GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //初始化
  68   1      
  69   1        PWM15_InitStructure.PWM_Enable    = ENABLE;   //PWM使能,  ENABLE, DISABLE
  70   1        PWM15_InitStructure.PWM_Period    = 0x1000;   //PWM周期,  0~0x7fff
  71   1        PWM15_InitStructure.PWM_Clock_Sel = PWMn_CLK_SYS;   //时钟源选择,  PWMn_CLK_SYS, PWMn_CLK_TM2
  72   1        PWM15_InitStructure.PWM_Clock_PS  = 0;        //系统时钟分频参数(PS+1分频),  0~15
  73   1        PWM15_InitStructure.PWM_CInt      = DISABLE;  //计数器归零中断使能,  ENABLE, DISABLE
  74   1        PWM15_InitStructure.PWM_Counter   = ENABLE;   //计数器使能,  ENABLE, DISABLE
  75   1        PWM15_Init(PWM0,&PWM15_InitStructure);
  76   1        
  77   1        PWM15Duty(PWM00,0x000,0x200);   //PWM_ID, 输出低电平位置, 输出高电平位置
  78   1        PWM15Duty(PWM01,0x000,0x400);   //PWM_ID, 输出低电平位置, 输出高电平位置
  79   1        PWM15Duty(PWM02,0x000,0x800);   //PWM_ID, 输出低电平位置, 输出高电平位置
  80   1        PWM15Duty(PWM03,0x200,0xc00);   //PWM_ID, 输出低电平位置, 输出高电平位置
  81   1        PWMChannelCtrl(PWM00,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  82   1        PWMChannelCtrl(PWM01,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  83   1        PWMChannelCtrl(PWM02,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  84   1        PWMChannelCtrl(PWM03,ENABLE,0,DISABLE,DISABLE,DISABLE); //PWM_ID, 输出使能, 初始电平, PWM中断, 第二个触发
             -点中断, 第一触发点中断
  85   1      
  86   1        pwm0 = 0;
  87   1        pwm1 = 0;
  88   1        pwm2 = 0;
  89   1        B_PWM0_Dir = 0;
  90   1        B_PWM1_Dir = 0;
  91   1      }
  92          
  93          //========================================================================
  94          // 函数: Sample_PWM15bit
  95          // 描述: 用户应用程序.
  96          // 参数: None.
  97          // 返回: None.
  98          // 版本: V1.0, 2020-09-28
  99          //========================================================================
 100          void Sample_PWM15bit(void)
 101          {
 102   1        if(B_PWM0_Dir)
 103   1        {
 104   2          if(--pwm0 <= 0x100) B_PWM0_Dir = 0; //PWM00
 105   2        }
 106   1        else  if(++pwm0 >= 0xf00) B_PWM0_Dir = 1; //PWM00
 107   1        PWM15Duty(PWM00,0,pwm0);
 108   1      
 109   1        if(B_PWM1_Dir)
 110   1        {
 111   2          if(--pwm1 <= 0x100)   B_PWM1_Dir = 0; //PWM01
C51 COMPILER V9.59.0.0   APP_PWM15BIT                                                      10/19/2021 09:01:33 PAGE 3   

 112   2        }
 113   1        else  if(++pwm1 >= 0xf00) B_PWM1_Dir = 1; //PWM01
 114   1        PWM15Duty(PWM01,0,pwm1);
 115   1      
 116   1        if(pwm2 >= 3000)
 117   1        {
 118   2          pwm2 = 0;
 119   2        }
 120   1        else  if(pwm2 >= 2000)
 121   1        {
 122   2          PWMLevelSet(PWM02,ENABLE,DISABLE);  //PWM_ID, 强制输出低电平, 强制输出高电平
 123   2        }
 124   1        else  if(pwm2 >= 1000)
 125   1        {
 126   2          PWMLevelSet(PWM02,DISABLE,ENABLE);  //PWM_ID, 强制输出低电平, 强制输出高电平
 127   2        }
 128   1        else
 129   1        {
 130   2          PWMLevelSet(PWM02,DISABLE,DISABLE); //PWM_ID, 强制输出低电平, 强制输出高电平
 131   2        }
 132   1        pwm2++;
 133   1      }
 134          
 135          
 136          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
