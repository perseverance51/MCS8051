C51 COMPILER V9.59.0.0   APP_I2C_PS                                                        10/19/2021 09:02:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE APP_I2C_PS
OBJECT MODULE PLACED IN .\list\APP_I2C_PS.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\APP_I2C_PS.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Dr
                    -iver\inc;..\User;..\App\inc) DEBUG PRINT(.\list\APP_I2C_PS.lst) TABS(2) OBJECT(.\list\APP_I2C_PS.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "APP.h"
  14          #include  "STC8G_H_GPIO.h"
  15          #include  "STC8G_H_I2C.h"
  16          #include  "STC8G_H_Soft_I2C.h"
  17          #include  "STC8G_H_NVIC.h"
  18          #include  "STC8G_H_Switch.h"
  19          
  20          /*************  功能说明  **************
  21          
  22          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  23          
  24          内部集成I2C串行总线控制器做从机模式，SCL->P3.2, SDA->P3.3;
  25          IO口模拟I2C做主机模式，SCL->P0.0, SDA->P0.1;
  26          通过外部飞线连接 P0.0->P3.2, P0.1->P3.3，实现I2C自发自收功能。
  27          
  28          用STC的MCU的IO方式驱动8位数码管。
  29          使用Timer0的16位自动重装来产生1ms节拍,程序运行于这个节拍下,用户修改MCU主时钟频率时,自动定时于1ms.
  30          计数器每秒钟加1, 计数范围为0~9999.
  31          
  32          显示效果为: 上电后主机每秒钟发送一次计数数据，并在左边4个数码管上显示发送内容；从机接收到数据后在右边4个数
             -码管显示。
  33          
  34          下载时, 选择时钟 24MHz (可以在配置文件"config.h"中修改).
  35          
  36          ******************************************/
  37          
  38          //========================================================================
  39          //                               本地常量声明 
  40          //========================================================================
  41          
  42          
  43          //========================================================================
  44          //                               本地变量声明
  45          //========================================================================
  46          
  47          u8  temp[4];     //通用数组
  48          
  49          //========================================================================
  50          //                               本地函数声明
  51          //========================================================================
  52          
  53          
C51 COMPILER V9.59.0.0   APP_I2C_PS                                                        10/19/2021 09:02:16 PAGE 2   

  54          //========================================================================
  55          //                            外部函数和变量声明
  56          //========================================================================
  57          
  58          
  59          //========================================================================
  60          // 函数: I2C_PS_init
  61          // 描述: 用户初始化程序.
  62          // 参数: None.
  63          // 返回: None.
  64          // 版本: V1.0, 2020-09-25
  65          //========================================================================
  66          void I2C_PS_init(void)
  67          {
  68   1        u8  i;
  69   1        I2C_InitTypeDef   I2C_InitStructure;
  70   1      
  71   1        P0_MODE_IO_PU(GPIO_Pin_0 | GPIO_Pin_1);   //P0.0,P0.1 设置为准双向口
  72   1        P3_MODE_IO_PU(GPIO_Pin_3);      //P3.3 设置为准双向口
  73   1        P6_MODE_IO_PU(GPIO_Pin_All);    //P6 设置为准双向口
  74   1        P7_MODE_IO_PU(GPIO_Pin_All);    //P7 设置为准双向口
  75   1        I2C_SW(I2C_P33_P32);          //I2C_P14_P15,I2C_P24_P25,I2C_P33_P32
  76   1      
  77   1        I2C_InitStructure.I2C_Mode      = I2C_Mode_Slave;   //主从选择   I2C_Mode_Master, I2C_Mode_Slave
  78   1        I2C_InitStructure.I2C_Enable    = ENABLE;           //I2C功能使能,   ENABLE, DISABLE
  79   1        I2C_InitStructure.I2C_SL_MA     = ENABLE;           //使能从机地址比较功能,   ENABLE, DISABLE
  80   1        I2C_InitStructure.I2C_SL_ADR    = 0x2d;             //从机设备地址,  0~127  (0x2d<<1 = 0x5a)
  81   1        I2C_Init(&I2C_InitStructure);
  82   1        NVIC_I2C_Init(I2C_Mode_Slave,I2C_ESTAI|I2C_ERXI|I2C_ETXI|I2C_ESTOI,Priority_0); //主从模式, I2C_Mode_Mast
             -er, I2C_Mode_Slave; 中断使能, I2C_ESTAI/I2C_ERXI/I2C_ETXI/I2C_ESTOI/DISABLE; 优先级(低到高) Priority_0,Priority_1,Priori
             -ty_2,Priority_3
  83   1      
  84   1        display_index = 0;
  85   1        DisplayFlag = 0;
  86   1        for(i=0; i<8; i++)  LED8[i] = 0x10; //上电消隐
  87   1      }
  88          
  89          //========================================================================
  90          // 函数: Sample_I2C_PS
  91          // 描述: 用户应用程序.
  92          // 参数: None.
  93          // 返回: None.
  94          // 版本: V1.0, 2020-09-25
  95          //========================================================================
  96          void Sample_I2C_PS(void)
  97          {
  98   1        DisplayScan();
  99   1        
 100   1        if(DisplayFlag)
 101   1        {
 102   2          DisplayFlag = 0;
 103   2          LED8[4] = I2C_Buffer[0];
 104   2          LED8[5] = I2C_Buffer[1];
 105   2          LED8[6] = I2C_Buffer[2];
 106   2          LED8[7] = I2C_Buffer[3];
 107   2        }
 108   1        
 109   1        if(++msecond >= 1000)   //1秒到
 110   1        {
 111   2          msecond = 0;        //清1000ms计数
 112   2          second++;         //秒计数+1
 113   2          if(second >= 10000)    second = 0;   //秒计数范围为0~9999
C51 COMPILER V9.59.0.0   APP_I2C_PS                                                        10/19/2021 09:02:16 PAGE 3   

 114   2      
 115   2          temp[0] = second / 1000;
 116   2          temp[1] = (second % 1000) / 100;
 117   2          temp[2] = (second % 100) / 10;
 118   2          temp[3] = second % 10;
 119   2          LED8[0] = temp[0];
 120   2          LED8[1] = temp[1];
 121   2          LED8[2] = temp[2];
 122   2          LED8[3] = temp[3];
 123   2      
 124   2          SI2C_WriteNbyte(0, temp, 4);
 125   2        }
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
