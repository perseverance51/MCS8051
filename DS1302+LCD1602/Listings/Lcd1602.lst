C51 COMPILER V9.60.0.0   LCD1602                                                           06/25/2022 11:00:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\Lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\Lcd1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\Lcd1602.lst) TABS(2) OBJECT(.\Objects\Lcd1602.obj)

line level    source

   1          /***************************Lcd1602.c 文件程序源代码*****************************/
   2          #include "Lcd1602.h"
   3          
   4          
   5          /* 等待液晶准备好 */
   6          void LcdWaitReady(){
   7   1          unsigned char sta;
   8   1      
   9   1          LCD1602_DB = 0xFF;
  10   1          LCD1602_RS = 0;
  11   1          LCD1602_RW = 1;
  12   1          do {
  13   2              LCD1602_E = 1;
  14   2              sta = LCD1602_DB; //读取状态字
  15   2              LCD1602_E = 0;
  16   2          } while (sta & 0x80); //bit7 等于 1 表示液晶正忙，重复检测直到其等于 0 为止
  17   1      }
  18          /* 向 LCD1602 液晶写入一字节命令，cmd-待写入命令值 */
  19          void LcdWriteCmd(unsigned char cmd){
  20   1          LcdWaitReady();
  21   1          LCD1602_RS = 0;
  22   1          LCD1602_RW = 0;
  23   1          LCD1602_DB = cmd;
  24   1          LCD1602_E = 1;
  25   1          LCD1602_E = 0;
  26   1      }
  27          /* 向 LCD1602 液晶写入一字节数据，dat-待写入数据值 */
  28          void LcdWriteDat(unsigned char dat){
  29   1          LcdWaitReady();
  30   1          LCD1602_RS = 1;
  31   1          LCD1602_RW = 0;
  32   1          LCD1602_DB = dat;
  33   1          LCD1602_E = 1;
  34   1          LCD1602_E = 0;
  35   1      }
  36          /* 设置显示 RAM 起始地址，亦即光标位置，(x,y)-对应屏幕上的字符坐标 */
  37          void LcdSetCursor(unsigned char x, unsigned char y){
  38   1          unsigned char addr;
  39   1          if (y == 0){ //由输入的屏幕坐标计算显示 RAM 的地址
  40   2              addr = 0x00 + x; //第一行字符地址从 0x00 起始
  41   2          }else{
  42   2              addr = 0x40 + x; //第二行字符地址从 0x40 起始
  43   2          }
  44   1          LcdWriteCmd(addr | 0x80); //设置 RAM 地址
  45   1      }
  46          /* 在液晶上显示字符串，(x,y)-对应屏幕上的起始坐标，str-字符串指针 */
  47          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str){
  48   1          LcdSetCursor(x, y); //设置起始地址
  49   1          while (*str != '\0'){ //连续写入字符串数据，直到检测到结束符
  50   2              LcdWriteDat(*str++);
  51   2          }
  52   1      }
  53          /* 打开光标的闪烁效果 */
  54          void LcdOpenCursor(){
C51 COMPILER V9.60.0.0   LCD1602                                                           06/25/2022 11:00:22 PAGE 2   

  55   1          LcdWriteCmd(0x0F);
  56   1      }
  57          /* 关闭光标显示 */
  58          void LcdCloseCursor(){
  59   1          LcdWriteCmd(0x0C);
  60   1      }
  61          /* 初始化 1602 液晶 */
  62          void InitLcd1602(){
  63   1          LcdWriteCmd(0x38); //16*2 显示，5*7 点阵，8 位数据接口
  64   1          LcdWriteCmd(0x0C); //显示器开，光标关闭
  65   1          LcdWriteCmd(0x06); //文字不动，地址自动+1
  66   1          LcdWriteCmd(0x01); //清屏
  67   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
