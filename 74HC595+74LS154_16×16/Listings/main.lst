C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2022 13:16:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //------------------------------------――
   2          //名称：用75LS595与74LS154在16x16点阵屏上显示信息
   3          //说明：本例综合使用了串入并出芯片75LS595,4-16译码器75LS154及
   4          //反相放大器74LS06,在16x16点阵屏上实现了汉字滚动显示效果。
   5          #include<reg51.h>
   6          //#include <REGX52.H>
   7          #include <intrins.h>
   8          
   9          #define uchar unsigned char
  10          #define uint unsigned int 
  11            
  12          sbit Serial_Data_Pin = P0^0;//75LS595串行数据输入
  13          sbit Shift_CLK_Pin = P3^7;//75LS595移位脉冲
  14          sbit RCK_Pin = P0^1;//75LS595输出锁存器控制
  15          sbit Switch_74LS154 = P3^6;//74LS154译码器开关
  16          
  17          uchar data Bit_Stream_8[32];//发送给75LS595的位流,每片接收8位
  18          uchar code Word_Set_OF_16x16[][32]=//待显示文字的点阵
  19          {
  20          {0xFF,0XFF,0x8F,0XF0,0x07,0XE0,0x77,0xEF,0x77,0xEF,0x07,0xE0,0x8F,0xF0,0xFF,0XFF,
  21          0XFF,0XFF,0X0F,0xF0,0x07,0XE0,0xF7,0xEF,0XF7,0xEF,0X07,0xE0,0x0F,0XF0,0XEF,0XFF},//80
  22          
  23          //{0XFF,0XFF,0x07,0XF6,0X07,0xE6,0x77,0XEF,0x77,0XEF,0x77,0XE0,0XF7,0XF0,0XFF,0XFF,
  24          //0xFF,0XFF,0XEF,0XFF,0XEF,0XFF,0X07,0XE0,0x07,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0xFF},//51
  25          {0xFF,0xFF,0x03,0xCE,0x03,0xCE,0x73,0xCE,0x73,0xCE,0x73,0xCE,0x73,0xCE,0x73,0xC0,
  26          0x73,0xC0,0xFF,0xFF,0xFF,0xFF,0xEF,0xDF,0x03,0xC0,0x03,0xC0,0xFF,0xDF,0xFF,0xFF},//51
  27          
  28          {0xFF,0xEF,0xFF,0xEF,0x07,0xEC,0xB6,0xED,0xB5,0xED,0xB3,0xED,0xB7,0xED,0x07,0x00,
  29          0xB7,0xED,0xB3,0xED,0xB5,0xED,0xB6,0xED,0x07,0xEC,0xFF,0xEF,0xFF,0xEF,0xFF,0xFF},/*"单",0*/
  30          
  31          {0x00,0x00,0x00,0xFE,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x00,0x00,
  32          0x00,0x80,0x60,0x1F,0x02,0x02,0x02,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x00},
  33          //{0xFF,0xFF,0xFF,0x7F,0xFF,0x9F,0x01,0xE0,0xDF,0xFD,0xDF,0xFD,0xDF,0xFD,0xDF,0xFD,
  34          //0xDF,0xFD,0xC0,0xFD,0xDF,0x01,0xDF,0xFF,0xDF,0xFF,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF},/*"片",1*/
  35          
  36          {0xFF,0xFF,0xEF,0xF3,0x6F,0xFC,0x01,0x80,0x01,0x80,0x6F,0xBC,0xEF,0x9D,0xFF,0xC7,
  37          0x03,0xF0,0xFB,0xFF,0xFB,0xFF,0x03,0xC0,0x03,0x80,0xFF,0xBF,0xFF,0x9F,0xFF,0xFF},/*"机",2*/
  38          
  39          {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x07,0xE0,0xF3,0xCF,0xF3,0xCF,0xF3,0xCF,
  40          0xF3,0xCF,0xF3,0xCF,0xF3,0xCF,0xC3,0xC3,0xC3,0xE3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},/*"C",0*/
  41          
  42          {0xFF,0xFF,0xBF,0xFF,0xB9,0xFF,0x33,0x80,0xFF,0xE7,0x7F,0xF7,0x6D,0xFF,0x6D,0x03,
  43          0x0D,0xBB,0x41,0xBB,0x6D,0xBB,0x6D,0xBB,0x0D,0xBB,0x0D,0x03,0x7D,0xFF,0xFF,0xFF},/*"语",1*/
  44          
  45          {0xFF,0xFF,0xF7,0xFF,0xF7,0xFF,0xD7,0x82,0xD7,0xDA,0xD7,0xDA,0xD7,0xDA,0xD1,0xDA,
  46          0xD7,0xDA,0xD7,0xDA,0xD7,0xDA,0xD7,0xDA,0xD7,0x82,0xF7,0xFF,0xF7,0xFF,0xFF,0xFF},/*"言",2*/
  47          
  48          {0xBF,0xFB,0x8F,0xFB,0xCE,0xFB,0x68,0xFB,0x69,0xFB,0x6F,0xBB,0x6E,0x3B,0x68,0x01,
  49          0x69,0x81,0x6F,0xF8,0x67,0xFA,0x63,0xFB,0xE8,0xFB,0xAC,0xFB,0x8F,0xFB,0xCF,0xFB},//学"
  50          
  51          {0xFF,0xFF,0xFD,0xF7,0xFD,0xE7,0xFD,0xE7,0xED,0xF3,0xCD,0xFB,0x1D,0xFB,0x3D,0xF9,
  52          0xFD,0xFD,0xFD,0xBC,0xFD,0x3E,0xFD,0x3E,0x01,0x80,0x01,0xC0,0xFF,0xFF,0xFF,0xFF},//习"
  53          
  54          };
C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2022 13:16:16 PAGE 2   

  55          
  56          //延时
  57          void Delay(uint x)
  58          {
  59   1        uchar i;
  60   1        while(x--)
  61   1        {
  62   2          for(i=0;i<120;i++);
  63   2        }
  64   1      }
  65          
  66          //向75LS595的串行输入引脚写入一字节
  67          void Serial_Input_Pin(uchar Abyte)
  68          {
  69   1      uchar i;//
  70   1      for(i=0;i<8;i++)
  71   1      {
  72   2        Abyte <<=1;
  73   2        Serial_Data_Pin = CY;
  74   2        Shift_CLK_Pin = 1;//上升沿移位i
  75   2        _nop_();
  76   2        _nop_();
  77   2        Shift_CLK_Pin = 0;
  78   2        }
  79   1      }
  80          
  81          //定时器0中断,在主程序中的延时期间以1ms的间隔动态显示每列数据
  82          //所显示的数据由2片75LS595并行输出
  83          void TO_Led_Display_control() interrupt 1
  84          {
  85   1        uchar i;
  86   1        TH0 = -1000/256;  //1ms 定时
  87   1        TL0 = -1000%256;
  88   1        i=(P2+1)&0x0f;  //当前列号加1,屏蔽高4位i=0~15
  89   1        Serial_Input_Pin(Bit_Stream_8[i*2 +1]);
  90   1        Serial_Input_Pin(Bit_Stream_8[i*2]);
  91   1        Switch_74LS154 =1;//关闭译码器
  92   1        RCK_Pin =1; //上升沿将数据送到输出锁存器
  93   1        RCK_Pin =0; //锁存显示数据（2x8=16位)
  94   1        Switch_74LS154 = 0;//打开译码器
  95   1        P2=i;//列号译码(4-16)
  96   1        
  97   1      }
  98          void main()
  99          {
 100   1        uchar i,k;
 101   1        TMOD = 0x01;//定时器T0工作方式1
 102   1        TH0 = (65536-1000)/256; //1ms 定时
 103   1        TL0= (65536-1000)%256;
 104   1        IE = 0x82;//允许定时器T0中断
 105   1        P2 = 0xFF;//行号端口初值
 106   1        while(1)
 107   1        {
 108   2          for(k=0;k<10;k++)//显示12项内容
 109   2          {
 110   3            for(i= 0;i<32;i++)//将当前待显示内容放入Bit_Stream.8
 111   3            {
 112   4        Bit_Stream_8[i]= Word_Set_OF_16x16[k][i];
 113   4              TR0 = 1;
 114   4        Delay(50);//在此期间由定时器中断显示信息
 115   4        TR0 = 0;
 116   4        P2 = 0XFF;
C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2022 13:16:16 PAGE 3   

 117   4            }
 118   3        } 
 119   2        } 
 120   1      }
 121          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =    320    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
