C51 COMPILER V9.60.0.0   MAIN                                                              02/02/2022 10:25:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include "stdio.h"
   4          #define MAIN_Fosc 16000000uL //晶振频率
   5          #define Baudrate  9600ul  //波特率
   6          sbit PIN_RXD = P2^1; //接收引脚定义
   7          sbit PIN_TXD = P2^0; //发送引脚定义
   8          bit RxdOrTxd = 0; //指示当前状态为接收还是发送
   9          bit RxdEnd = 0; //接收结束标志
  10          bit TxdEnd = 0; //发送结束标志
  11          unsigned char RxdBuf = 0; //接收缓冲器
  12          unsigned char TxdBuf = 0; //发送缓冲器
  13          void ConfigUART(unsigned int baud);
  14          void StartTXD(unsigned char dat);
  15          void StartRXD();
  16          char putchar(char c)
  17          {
  18   1          StartTXD((unsigned char)c);
  19   1          return c;
  20   1      }
  21          void Delay1000ms()    //@16MHz
  22          {
  23   1        unsigned char i, j, k;
  24   1      
  25   1        _nop_();
  26   1        _nop_();
  27   1        i = 61;
  28   1        j = 204;
  29   1        k = 243;
  30   1        do
  31   1        {
  32   2          do
  33   2          {
  34   3            while (--k);
  35   3          } while (--j);
  36   2        } while (--i);
  37   1      }
  38          
  39          void main() {
  40   1          EA = 1; //开总中断
  41   1          ConfigUART(Baudrate);//设置软串口波特率
  42   1          while (1) { //配置波特率为 9600
  43   2              while (PIN_RXD); //等待接收引脚出现低电平，即起始位
  44   2              StartRXD(); //启动接收
  45   2            printf("perseverance51 \r\n");
  46   2              while (!RxdEnd); //等待接收完成
  47   2              StartTXD(RxdBuf+1); //接收到的数据+1 后，发送回去
  48   2              while (!TxdEnd); //等待发送完成
  49   2            Delay1000ms();
  50   2            
  51   2          }
  52   1      }
  53          /* 串口配置函数，baud-通信波特率 */
  54          void ConfigUART(unsigned int baud) {
C51 COMPILER V9.60.0.0   MAIN                                                              02/02/2022 10:25:49 PAGE 2   

  55   1          TMOD &= 0xF0; //清零 T0 的控制位
  56   1          TMOD |= 0x02; //配置 T0 为模式 2
  57   1          TH0 = 256 - (MAIN_Fosc/12)/baud; //计算 T0 重载值
  58   1      }
  59          /* 启动串行接收 */
  60          void StartRXD() {
  61   1          TL0 = 256 - ((256-TH0)>>1); //接收启动时的 T0 定时为半个波特率周期
  62   1          ET0 = 1; //使能 T0 中断
  63   1          TR0 = 1; //启动 T0
  64   1          RxdEnd = 0; //清零接收结束标志
  65   1          RxdOrTxd = 0; //设置当前状态为接收
  66   1      }
  67          /* 启动串行发送，dat-待发送字节数据 */
  68          void StartTXD(unsigned char dat) {
  69   1          TxdBuf = dat; //待发送数据保存到发送缓冲器
  70   1          TL0 = TH0; //T0 计数初值为重载值
  71   1          ET0 = 1; //使能 T0 中断
  72   1          TR0 = 1; //启动 T0
  73   1          PIN_TXD = 0; //发送起始位
  74   1          TxdEnd = 0; //清零发送结束标志
  75   1          RxdOrTxd = 1; //设置当前状态为发送
  76   1      }
  77          /* T0 中断服务函数，处理串行发送和接收 */
  78          void InterruptTimer0() interrupt 1 {
  79   1          static unsigned char cnt = 0; //位接收或发送计数
  80   1          if (RxdOrTxd) { //串行发送处理
  81   2              cnt++;
  82   2              if (cnt <= 8) { //低位在先依次发送 8bit 数据位
  83   3                  PIN_TXD = TxdBuf & 0x01;
  84   3                  TxdBuf >>= 1;
  85   3              } else if (cnt == 9) { //发送停止位
  86   3                  PIN_TXD = 1;
  87   3              } else { //发送结束
  88   3                  cnt = 0; //复位 bit 计数器
  89   3                  TR0 = 0; //关闭 T0
  90   3                  TxdEnd = 1; //置发送结束标志
  91   3              }
  92   2          } else { //串行接收处理
  93   2              if (cnt == 0) { //处理起始位
  94   3                  if (!PIN_RXD) { //起始位为 0 时，清零接收缓冲器，准备接收数据位
  95   4                      RxdBuf = 0;
  96   4                      cnt++;
  97   4                  }
  98   3              } else { //起始位不为 0 时，中止接收
  99   3                  TR0 = 0; //关闭 T0
 100   3              } 
 101   2              if (cnt <= 8) { //处理 8 位数据位
 102   3                  RxdBuf >>= 1; //低位在先，所以将之前接收的位向右移
 103   3                  //接收脚为 1 时，缓冲器最高位置 1，
 104   3                  //而为 0 时不处理即仍保持移位后的 0
 105   3                  if (PIN_RXD) {
 106   4                      RxdBuf |= 0x80;
 107   4                  }
 108   3                  cnt++;
 109   3              } else { //停止位处理
 110   3                  cnt = 0; //复位 bit 计数器
 111   3                  TR0 = 0; //关闭 T0
 112   3                  if (PIN_RXD) { //停止位为 1 时，方能认为数据有效
 113   4                      RxdEnd = 1; //置接收结束标志
 114   4                  }
 115   3              }
 116   2          }
C51 COMPILER V9.60.0.0   MAIN                                                              02/02/2022 10:25:49 PAGE 3   

 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    260    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
