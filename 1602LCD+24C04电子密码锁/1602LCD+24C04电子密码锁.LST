C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 1602LCD_24C04__________
OBJECT MODULE PLACED IN 1602LCD+24C04电子密码锁.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 1602LCD+24C04电子密码锁.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TA
                    -BS(2)

line level    source

   1          #include<reg51.h>
   2          #include<string.h>
   3          #include<intrins.h>
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          #define     LCDIO      P0
   7          #define delay4us() _nop_();_nop_();_nop_();_nop_();
   8          uchar buffer[6]={0}; 
   9          sbit sda=P3^3;
  10          sbit scl=P3^2;
  11          sbit beep=P3^7;
  12          bit  flag=0,aa;        //用户蹲渊义定时溢出标志位
  13          uchar  DSY_BUFFER[16]="                ";
  14          uchar  DSY_BUFFER1[16]="                ";
  15          uchar  Userpassword[6]={0};
  16          sbit  rs=P2^0;  
  17          sbit  rd=P2^1;
  18          sbit  lcden=P2^2;
  19          sbit  led=P2^7;
  20          uchar code table2[]="123456";
  21          uchar code table[]="Your Password...";
  22          void delayms(uint z)
  23          {
  24   1        uint x,y;
  25   1        for(x=z;x>0;x--)
  26   1          for(y=110;y>0;y--);
  27   1      }
  28          void delay()      //短延时，两个机器周期,做总线的延时用
  29          {;;}
  30          void write_com(uchar com)
  31          {
  32   1        rs=0;
  33   1        rd=0;
  34   1        lcden=0;
  35   1        P0=com;
  36   1        delayms(3);
  37   1        lcden=1;
  38   1        delayms(3);
  39   1        lcden=0;  
  40   1      }
  41          
  42          void write_date(uchar date)
  43          {
  44   1        rs=1;
  45   1        rd=0;
  46   1        lcden=0;
  47   1        P0=date;
  48   1        delayms(3);
  49   1        lcden=1;
  50   1        delayms(3);
  51   1        lcden=0;  
  52   1      }
  53          void Display_String(uchar *p,uchar com)
  54          {  uchar i;
C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 2   

  55   1         write_com(com);
  56   1         for(i=0;i<16;i++)
  57   1         {
  58   2         write_date(p[i]);
  59   2        }
  60   1      }
  61          void init_lcd()
  62          {
  63   1        lcden=0;
  64   1        write_com(0x38);
  65   1        write_com(0x0c);
  66   1        write_com(0x06);
  67   1        write_com(0x01);
  68   1        write_com(0x80);
  69   1          Display_String(table,0x80);
  70   1        Display_String("Lock OK!         ",0xc0);
  71   1      }
  72          
  73          void start()
  74          {
  75   1        sda=1;
  76   1        scl=1;
  77   1        delay4us();
  78   1        sda=0;
  79   1        delay4us();
  80   1        scl=0;
  81   1      }
  82          void stop()
  83          {
  84   1        sda=0;
  85   1        scl=1;
  86   1        delay4us();
  87   1        sda=1;
  88   1        delay4us();
  89   1        scl=0;
  90   1      }
  91          void init()              //初始化
  92          {
  93   1      sda=1;
  94   1      delay();
  95   1      scl=1;
  96   1      delay();
  97   1      }
  98          
  99          
 100          void ack()
 101          {
 102   1        sda=0;
 103   1        scl=1;
 104   1        delay4us();
 105   1        scl=0;
 106   1        sda=1;
 107   1      }
 108          void noack()
 109          {
 110   1        sda=1;
 111   1        scl=1;
 112   1        delay4us();
 113   1        scl=0;
 114   1        sda=0;
 115   1      }
 116          uchar recbyte()
C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 3   

 117          {
 118   1        uchar i,rd;
 119   1        rd=0x00;
 120   1        sda=1;
 121   1        for(i=0;i<8;i++)
 122   1        {
 123   2          scl=1;
 124   2          rd<<=1;
 125   2          rd|=sda;
 126   2          delay4us();
 127   2          scl=0;
 128   2          delay4us();
 129   2        }
 130   1        scl=0;
 131   1        delay4us();
 132   1        return rd;
 133   1      }
 134          uchar sendbyte(uchar wd)
 135          {
 136   1        uchar i;
 137   1        bit ack0;
 138   1        for(i=0;i<8;i++)
 139   1        {
 140   2          sda=(bit)(wd&0x80);
 141   2          _nop_();
 142   2          _nop_();
 143   2          scl=1;
 144   2          delay4us();
 145   2          scl=0;
 146   2          wd<<=1;
 147   2        }
 148   1        delay4us();
 149   1        sda=1;
 150   1        scl=1;
 151   1        delay4us();
 152   1        ack0=!sda;
 153   1        scl=0;
 154   1        delay4us();
 155   1        return ack0;
 156   1      }
 157          uchar Recstring(uchar slave,uchar subaddr,uchar *buffer,uchar n)
 158          {
 159   1       uchar i; 
 160   1       start();
 161   1       if(!sendbyte(slave)) return 0;
 162   1       if(!sendbyte(subaddr)) return 0;
 163   1       start();
 164   1       if(!sendbyte(slave+1)) return 0;
 165   1       for(i=0;i<n-1;i++)
 166   1        {
 167   2          buffer[i]=recbyte();
 168   2        ack();
 169   2        }
 170   1       buffer[n-1]=recbyte();
 171   1       noack();
 172   1       stop();
 173   1       return 1;
 174   1      }
 175          
 176          uchar Sendstring(uchar slave,uchar subaddr,uchar *buffer,uchar n)
 177          {
 178   1        uchar i;
C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 4   

 179   1        start();
 180   1        if(!sendbyte(slave)) return 0;
 181   1        if(!sendbyte(subaddr)) return 0;
 182   1        for(i=0;i<n;i++)
 183   1        {
 184   2          if(!sendbyte(buffer[i])) return 0;
 185   2        }
 186   1        stop();
 187   1        return 1;
 188   1      }
 189          void clear_password( )
 190          {  uchar i;
 191   1        for(i=0;i<6;i++)
 192   1        {
 193   2         Userpassword[i]=' ';
 194   2        }
 195   1        for(i=0;i<16;i++)
 196   1        {
 197   2           DSY_BUFFER[i]=' ';   
 198   2         }
 199   1      }
 200          uchar Keys_Scan()
 201          {  
 202   1        uchar temp,keynum;
 203   1        P1=0x0F;
 204   1        delayms(5);
 205   1        temp=P1^0x0F;
 206   1        switch(temp)
 207   1        {
 208   2          case 1:keynum=0;break;
 209   2          case 2:keynum=1;break;
 210   2          case 4:keynum=2;break;
 211   2          case 8:keynum=3;break;
 212   2          break;
 213   2        }
 214   1        P1=0xF0;
 215   1        delayms(5);
 216   1        temp=P1>>4^0x0F;
 217   1        switch(temp)
 218   1        {
 219   2          case 1:keynum+=0;break;
 220   2          case 2:keynum+=4;break;
 221   2          case 4:keynum+=8;break;
 222   2          case 8:keynum+=12;break;
 223   2          break;
 224   2        }
 225   1        delayms(600);
 226   1         return keynum;
 227   1      }
 228          void main()
 229          {   uchar temp,i=0,j=0,k=0,n;
 230   1        uchar IS_valid_user; 
 231   1        beep=1;
 232   1        init();      
 233   1          init_lcd();
 234   1        delayms(5);
 235   1        aa=Sendstring(0xa0,1,table2,6);
 236   1        delayms(5);
 237   1        aa=Recstring(0xa0,1,buffer,6);
 238   1        delayms(10);
 239   1         P1=0x0f;     
 240   1          while(1)
C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 5   

 241   1          { 
 242   2           
 243   2            if(P1!=0x0f)
 244   2            {  
 245   3                temp=Keys_Scan();
 246   3                switch(temp)
 247   3                       {
 248   4                             case 0:  case 1: case 2: case 3: case 4: 
 249   4                             case 5:  case 6: case 7: case 8: case 9:
 250   4                              
 251   4                             if (i<=5)             //密码限制在6位以内
 252   4                             {
 253   5                              Userpassword[i]=temp;
 254   5                              DSY_BUFFER[i]='*';
 255   5                              Display_String(DSY_BUFFER,0xc0);    
 256   5                  i++;
 257   5                               }                
 258   4                              break;
 259   4                      
 260   4                              case 10: //按A键开锁
 261   4                  for(k=0;k<6;k++)
 262   4                  {
 263   5                    if(buffer[k]==(Userpassword[k]+48))
 264   5                    flag=1;
 265   5                    else
 266   5                    flag=0;
 267   5                  }
 268   4                              if (flag==1) 
 269   4                              { flag=0;
 270   5                    i=0;
 271   5                                led=0;  //点亮LED
 272   5                                 clear_password();
 273   5                                 Display_String("OPEN    OK!      ",0xc0);
 274   5                                 IS_valid_user = 1;
 275   5                     j=0;
 276   5                              }
 277   4                             else 
 278   4                              { 
 279   5                   j++;
 280   5                               led=1;   //关闭LED
 281   5                               clear_password();
 282   5                               Display_String("ERROR!Have try   ",0xc0);
 283   5                   write_com(0xcf);
 284   5                   write_date(0x30+j);
 285   5                               IS_valid_user=0;
 286   5                               }
 287   4                              i=0;
 288   4                              break;
 289   4                          
 290   4                            case 11: //按B键上锁
 291   4                            led=1;   
 292   4                            clear_password();
 293   4                            Display_String(table,0x80);
 294   4                            Display_String("Lock OK!         ",0xc0);
 295   4                            i=0;                         
 296   4                            IS_valid_user=0;               
 297   4                            break;
 298   4                                         
 299   4                            case 12: //按C键设置新密码
 300   4                             //如果是合法用户则提示输入新密码    
 301   4                            if ( !IS_valid_user) 
 302   4                  {
C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 6   

 303   5                   i=0;
 304   5                   Display_String("No rights !      ",0xc0);
 305   5                   delayms(1000);
 306   5                   Display_String("Your Password...",0x80);
 307   5                   Display_String("Lock OK!         ",0xc0);
 308   5                   }
 309   4                             else 
 310   4                              {
 311   5                                i=0;
 312   5                                Display_String("New Password:   ",0x80);
 313   5                                Display_String("                ",0xc0);
 314   5                               }
 315   4                 
 316   4                             break;                        
 317   4                          
 318   4                            case 13: //按D键保存新密码
 319   4                            if ( !IS_valid_user)
 320   4                  {   i=0;
 321   5                     Display_String("No rights !       ",0xc0);
 322   5                      delayms(1000);
 323   5                   Display_String("Your Password...",0x80);
 324   5                   Display_String("Lock OK!         ",0xc0);
 325   5                   }
 326   4                             else 
 327   4                            {i = 0;  
 328   5                   init();
 329   5                   delayms(5);
 330   5                   for(k=0;k<6;k++)
 331   5                   {
 332   6                     Userpassword[k]=Userpassword[k]+48;
 333   6                   }
 334   5                             aa=Sendstring(0xa0,1,Userpassword,6);
 335   5                   delayms(5);
 336   5                             aa=Recstring(0xa0,1,buffer,6);  
 337   5                   delayms(5); 
 338   5                             clear_password();                         
 339   5                             Display_String(table,0x00);
 340   5                             Display_String("Password Saved!   ",0xc0);
 341   5                   delayms(1000);
 342   5                   Display_String("Do lock agian ?   ",0xc0);
 343   5                            }               
 344   4                            break;                        
 345   4             
 346   4                            case 14: //按E键消除所有输入
 347   4                            i=0;
 348   4                            clear_password();
 349   4                            Display_String("                ",0xc0);            
 350   4                  break;
 351   4      
 352   4                  case 15:   //清除一位
 353   4                   if(i!=0)i--;
 354   4                   for(n=0;n<i;n++)
 355   4                   {
 356   5                     DSY_BUFFER1[n]='*';  
 357   5                   }
 358   4                   Display_String(DSY_BUFFER1,0xc0);    
 359   4                   
 360   4                  }
 361   3                  P1=0x0f;
 362   3            }
 363   2            if(j==3)
 364   2            {  Display_String("THIEF!!!THIEF!!!",0xc0); 
C51 COMPILER V9.60.0.0   1602LCD_24C04__________                                           07/03/2022 17:09:18 PAGE 7   

 365   3              j=0;
 366   3              beep=0;
 367   3            }
 368   2          }
 369   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1304    ----
   CONSTANT SIZE    =    221    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
